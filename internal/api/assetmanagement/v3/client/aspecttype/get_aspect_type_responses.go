// Code generated by go-swagger; DO NOT EDIT.

package aspecttype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// GetAspectTypeReader is a Reader for the GetAspectType structure.
type GetAspectTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAspectTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAspectTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetAspectTypeNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetAspectTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAspectTypeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAspectTypeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAspectTypeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAspectTypeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /aspecttypes/{id}] getAspectType", response, response.Code())
	}
}

// NewGetAspectTypeOK creates a GetAspectTypeOK with default headers values
func NewGetAspectTypeOK() *GetAspectTypeOK {
	return &GetAspectTypeOK{}
}

/*
GetAspectTypeOK describes a response with status code 200, with default header values.

Returns the aspect type
*/
type GetAspectTypeOK struct {
	Payload *models.AspectTypeResource
}

// IsSuccess returns true when this get aspect type o k response has a 2xx status code
func (o *GetAspectTypeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get aspect type o k response has a 3xx status code
func (o *GetAspectTypeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get aspect type o k response has a 4xx status code
func (o *GetAspectTypeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get aspect type o k response has a 5xx status code
func (o *GetAspectTypeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get aspect type o k response a status code equal to that given
func (o *GetAspectTypeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get aspect type o k response
func (o *GetAspectTypeOK) Code() int {
	return 200
}

func (o *GetAspectTypeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeOK %s", 200, payload)
}

func (o *GetAspectTypeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeOK %s", 200, payload)
}

func (o *GetAspectTypeOK) GetPayload() *models.AspectTypeResource {
	return o.Payload
}

func (o *GetAspectTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AspectTypeResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAspectTypeNotModified creates a GetAspectTypeNotModified with default headers values
func NewGetAspectTypeNotModified() *GetAspectTypeNotModified {
	return &GetAspectTypeNotModified{}
}

/*
GetAspectTypeNotModified describes a response with status code 304, with default header values.

AspectType not changed
*/
type GetAspectTypeNotModified struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get aspect type not modified response has a 2xx status code
func (o *GetAspectTypeNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get aspect type not modified response has a 3xx status code
func (o *GetAspectTypeNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get aspect type not modified response has a 4xx status code
func (o *GetAspectTypeNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get aspect type not modified response has a 5xx status code
func (o *GetAspectTypeNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get aspect type not modified response a status code equal to that given
func (o *GetAspectTypeNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get aspect type not modified response
func (o *GetAspectTypeNotModified) Code() int {
	return 304
}

func (o *GetAspectTypeNotModified) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeNotModified %s", 304, payload)
}

func (o *GetAspectTypeNotModified) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeNotModified %s", 304, payload)
}

func (o *GetAspectTypeNotModified) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetAspectTypeNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAspectTypeBadRequest creates a GetAspectTypeBadRequest with default headers values
func NewGetAspectTypeBadRequest() *GetAspectTypeBadRequest {
	return &GetAspectTypeBadRequest{}
}

/*
GetAspectTypeBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type GetAspectTypeBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get aspect type bad request response has a 2xx status code
func (o *GetAspectTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get aspect type bad request response has a 3xx status code
func (o *GetAspectTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get aspect type bad request response has a 4xx status code
func (o *GetAspectTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get aspect type bad request response has a 5xx status code
func (o *GetAspectTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get aspect type bad request response a status code equal to that given
func (o *GetAspectTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get aspect type bad request response
func (o *GetAspectTypeBadRequest) Code() int {
	return 400
}

func (o *GetAspectTypeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeBadRequest %s", 400, payload)
}

func (o *GetAspectTypeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeBadRequest %s", 400, payload)
}

func (o *GetAspectTypeBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetAspectTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAspectTypeUnauthorized creates a GetAspectTypeUnauthorized with default headers values
func NewGetAspectTypeUnauthorized() *GetAspectTypeUnauthorized {
	return &GetAspectTypeUnauthorized{}
}

/*
GetAspectTypeUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type GetAspectTypeUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get aspect type unauthorized response has a 2xx status code
func (o *GetAspectTypeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get aspect type unauthorized response has a 3xx status code
func (o *GetAspectTypeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get aspect type unauthorized response has a 4xx status code
func (o *GetAspectTypeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get aspect type unauthorized response has a 5xx status code
func (o *GetAspectTypeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get aspect type unauthorized response a status code equal to that given
func (o *GetAspectTypeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get aspect type unauthorized response
func (o *GetAspectTypeUnauthorized) Code() int {
	return 401
}

func (o *GetAspectTypeUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeUnauthorized %s", 401, payload)
}

func (o *GetAspectTypeUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeUnauthorized %s", 401, payload)
}

func (o *GetAspectTypeUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetAspectTypeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAspectTypeForbidden creates a GetAspectTypeForbidden with default headers values
func NewGetAspectTypeForbidden() *GetAspectTypeForbidden {
	return &GetAspectTypeForbidden{}
}

/*
GetAspectTypeForbidden describes a response with status code 403, with default header values.

User is not authorized for request
*/
type GetAspectTypeForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get aspect type forbidden response has a 2xx status code
func (o *GetAspectTypeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get aspect type forbidden response has a 3xx status code
func (o *GetAspectTypeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get aspect type forbidden response has a 4xx status code
func (o *GetAspectTypeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get aspect type forbidden response has a 5xx status code
func (o *GetAspectTypeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get aspect type forbidden response a status code equal to that given
func (o *GetAspectTypeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get aspect type forbidden response
func (o *GetAspectTypeForbidden) Code() int {
	return 403
}

func (o *GetAspectTypeForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeForbidden %s", 403, payload)
}

func (o *GetAspectTypeForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeForbidden %s", 403, payload)
}

func (o *GetAspectTypeForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetAspectTypeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAspectTypeNotFound creates a GetAspectTypeNotFound with default headers values
func NewGetAspectTypeNotFound() *GetAspectTypeNotFound {
	return &GetAspectTypeNotFound{}
}

/*
GetAspectTypeNotFound describes a response with status code 404, with default header values.

AspectType not found
*/
type GetAspectTypeNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get aspect type not found response has a 2xx status code
func (o *GetAspectTypeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get aspect type not found response has a 3xx status code
func (o *GetAspectTypeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get aspect type not found response has a 4xx status code
func (o *GetAspectTypeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get aspect type not found response has a 5xx status code
func (o *GetAspectTypeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get aspect type not found response a status code equal to that given
func (o *GetAspectTypeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get aspect type not found response
func (o *GetAspectTypeNotFound) Code() int {
	return 404
}

func (o *GetAspectTypeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeNotFound %s", 404, payload)
}

func (o *GetAspectTypeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeNotFound %s", 404, payload)
}

func (o *GetAspectTypeNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetAspectTypeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAspectTypeInternalServerError creates a GetAspectTypeInternalServerError with default headers values
func NewGetAspectTypeInternalServerError() *GetAspectTypeInternalServerError {
	return &GetAspectTypeInternalServerError{}
}

/*
GetAspectTypeInternalServerError describes a response with status code 500, with default header values.

Server error, for more information see errorcode and message
*/
type GetAspectTypeInternalServerError struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get aspect type internal server error response has a 2xx status code
func (o *GetAspectTypeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get aspect type internal server error response has a 3xx status code
func (o *GetAspectTypeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get aspect type internal server error response has a 4xx status code
func (o *GetAspectTypeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get aspect type internal server error response has a 5xx status code
func (o *GetAspectTypeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get aspect type internal server error response a status code equal to that given
func (o *GetAspectTypeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get aspect type internal server error response
func (o *GetAspectTypeInternalServerError) Code() int {
	return 500
}

func (o *GetAspectTypeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeInternalServerError %s", 500, payload)
}

func (o *GetAspectTypeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes/{id}][%d] getAspectTypeInternalServerError %s", 500, payload)
}

func (o *GetAspectTypeInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetAspectTypeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
