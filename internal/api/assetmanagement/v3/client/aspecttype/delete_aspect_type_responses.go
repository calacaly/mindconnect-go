// Code generated by go-swagger; DO NOT EDIT.

package aspecttype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// DeleteAspectTypeReader is a Reader for the DeleteAspectType structure.
type DeleteAspectTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAspectTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAspectTypeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAspectTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAspectTypeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAspectTypeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAspectTypeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeleteAspectTypePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAspectTypeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /aspecttypes/{id}] deleteAspectType", response, response.Code())
	}
}

// NewDeleteAspectTypeNoContent creates a DeleteAspectTypeNoContent with default headers values
func NewDeleteAspectTypeNoContent() *DeleteAspectTypeNoContent {
	return &DeleteAspectTypeNoContent{}
}

/*
DeleteAspectTypeNoContent describes a response with status code 204, with default header values.

Aspect type deletion was successful
*/
type DeleteAspectTypeNoContent struct {
}

// IsSuccess returns true when this delete aspect type no content response has a 2xx status code
func (o *DeleteAspectTypeNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete aspect type no content response has a 3xx status code
func (o *DeleteAspectTypeNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete aspect type no content response has a 4xx status code
func (o *DeleteAspectTypeNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete aspect type no content response has a 5xx status code
func (o *DeleteAspectTypeNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete aspect type no content response a status code equal to that given
func (o *DeleteAspectTypeNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete aspect type no content response
func (o *DeleteAspectTypeNoContent) Code() int {
	return 204
}

func (o *DeleteAspectTypeNoContent) Error() string {
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeNoContent", 204)
}

func (o *DeleteAspectTypeNoContent) String() string {
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeNoContent", 204)
}

func (o *DeleteAspectTypeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAspectTypeBadRequest creates a DeleteAspectTypeBadRequest with default headers values
func NewDeleteAspectTypeBadRequest() *DeleteAspectTypeBadRequest {
	return &DeleteAspectTypeBadRequest{}
}

/*
DeleteAspectTypeBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type DeleteAspectTypeBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete aspect type bad request response has a 2xx status code
func (o *DeleteAspectTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete aspect type bad request response has a 3xx status code
func (o *DeleteAspectTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete aspect type bad request response has a 4xx status code
func (o *DeleteAspectTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete aspect type bad request response has a 5xx status code
func (o *DeleteAspectTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete aspect type bad request response a status code equal to that given
func (o *DeleteAspectTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete aspect type bad request response
func (o *DeleteAspectTypeBadRequest) Code() int {
	return 400
}

func (o *DeleteAspectTypeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeBadRequest %s", 400, payload)
}

func (o *DeleteAspectTypeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeBadRequest %s", 400, payload)
}

func (o *DeleteAspectTypeBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteAspectTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAspectTypeUnauthorized creates a DeleteAspectTypeUnauthorized with default headers values
func NewDeleteAspectTypeUnauthorized() *DeleteAspectTypeUnauthorized {
	return &DeleteAspectTypeUnauthorized{}
}

/*
DeleteAspectTypeUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type DeleteAspectTypeUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete aspect type unauthorized response has a 2xx status code
func (o *DeleteAspectTypeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete aspect type unauthorized response has a 3xx status code
func (o *DeleteAspectTypeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete aspect type unauthorized response has a 4xx status code
func (o *DeleteAspectTypeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete aspect type unauthorized response has a 5xx status code
func (o *DeleteAspectTypeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete aspect type unauthorized response a status code equal to that given
func (o *DeleteAspectTypeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete aspect type unauthorized response
func (o *DeleteAspectTypeUnauthorized) Code() int {
	return 401
}

func (o *DeleteAspectTypeUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeUnauthorized %s", 401, payload)
}

func (o *DeleteAspectTypeUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeUnauthorized %s", 401, payload)
}

func (o *DeleteAspectTypeUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteAspectTypeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAspectTypeForbidden creates a DeleteAspectTypeForbidden with default headers values
func NewDeleteAspectTypeForbidden() *DeleteAspectTypeForbidden {
	return &DeleteAspectTypeForbidden{}
}

/*
DeleteAspectTypeForbidden describes a response with status code 403, with default header values.

User is not authorized for request
*/
type DeleteAspectTypeForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete aspect type forbidden response has a 2xx status code
func (o *DeleteAspectTypeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete aspect type forbidden response has a 3xx status code
func (o *DeleteAspectTypeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete aspect type forbidden response has a 4xx status code
func (o *DeleteAspectTypeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete aspect type forbidden response has a 5xx status code
func (o *DeleteAspectTypeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete aspect type forbidden response a status code equal to that given
func (o *DeleteAspectTypeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete aspect type forbidden response
func (o *DeleteAspectTypeForbidden) Code() int {
	return 403
}

func (o *DeleteAspectTypeForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeForbidden %s", 403, payload)
}

func (o *DeleteAspectTypeForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeForbidden %s", 403, payload)
}

func (o *DeleteAspectTypeForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteAspectTypeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAspectTypeNotFound creates a DeleteAspectTypeNotFound with default headers values
func NewDeleteAspectTypeNotFound() *DeleteAspectTypeNotFound {
	return &DeleteAspectTypeNotFound{}
}

/*
DeleteAspectTypeNotFound describes a response with status code 404, with default header values.

AspectType not found
*/
type DeleteAspectTypeNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete aspect type not found response has a 2xx status code
func (o *DeleteAspectTypeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete aspect type not found response has a 3xx status code
func (o *DeleteAspectTypeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete aspect type not found response has a 4xx status code
func (o *DeleteAspectTypeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete aspect type not found response has a 5xx status code
func (o *DeleteAspectTypeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete aspect type not found response a status code equal to that given
func (o *DeleteAspectTypeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete aspect type not found response
func (o *DeleteAspectTypeNotFound) Code() int {
	return 404
}

func (o *DeleteAspectTypeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeNotFound %s", 404, payload)
}

func (o *DeleteAspectTypeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeNotFound %s", 404, payload)
}

func (o *DeleteAspectTypeNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteAspectTypeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAspectTypePreconditionFailed creates a DeleteAspectTypePreconditionFailed with default headers values
func NewDeleteAspectTypePreconditionFailed() *DeleteAspectTypePreconditionFailed {
	return &DeleteAspectTypePreconditionFailed{}
}

/*
DeleteAspectTypePreconditionFailed describes a response with status code 412, with default header values.

AspectType is changed in the background
*/
type DeleteAspectTypePreconditionFailed struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete aspect type precondition failed response has a 2xx status code
func (o *DeleteAspectTypePreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete aspect type precondition failed response has a 3xx status code
func (o *DeleteAspectTypePreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete aspect type precondition failed response has a 4xx status code
func (o *DeleteAspectTypePreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete aspect type precondition failed response has a 5xx status code
func (o *DeleteAspectTypePreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete aspect type precondition failed response a status code equal to that given
func (o *DeleteAspectTypePreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the delete aspect type precondition failed response
func (o *DeleteAspectTypePreconditionFailed) Code() int {
	return 412
}

func (o *DeleteAspectTypePreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypePreconditionFailed %s", 412, payload)
}

func (o *DeleteAspectTypePreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypePreconditionFailed %s", 412, payload)
}

func (o *DeleteAspectTypePreconditionFailed) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteAspectTypePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAspectTypeInternalServerError creates a DeleteAspectTypeInternalServerError with default headers values
func NewDeleteAspectTypeInternalServerError() *DeleteAspectTypeInternalServerError {
	return &DeleteAspectTypeInternalServerError{}
}

/*
DeleteAspectTypeInternalServerError describes a response with status code 500, with default header values.

Server error, for more information see errorcode and message
*/
type DeleteAspectTypeInternalServerError struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete aspect type internal server error response has a 2xx status code
func (o *DeleteAspectTypeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete aspect type internal server error response has a 3xx status code
func (o *DeleteAspectTypeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete aspect type internal server error response has a 4xx status code
func (o *DeleteAspectTypeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete aspect type internal server error response has a 5xx status code
func (o *DeleteAspectTypeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete aspect type internal server error response a status code equal to that given
func (o *DeleteAspectTypeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete aspect type internal server error response
func (o *DeleteAspectTypeInternalServerError) Code() int {
	return 500
}

func (o *DeleteAspectTypeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeInternalServerError %s", 500, payload)
}

func (o *DeleteAspectTypeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /aspecttypes/{id}][%d] deleteAspectTypeInternalServerError %s", 500, payload)
}

func (o *DeleteAspectTypeInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteAspectTypeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
