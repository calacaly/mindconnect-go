// Code generated by go-swagger; DO NOT EDIT.

package aspecttype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// NewUpdateAspectTypeVariableParams creates a new UpdateAspectTypeVariableParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateAspectTypeVariableParams() *UpdateAspectTypeVariableParams {
	return &UpdateAspectTypeVariableParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateAspectTypeVariableParamsWithTimeout creates a new UpdateAspectTypeVariableParams object
// with the ability to set a timeout on a request.
func NewUpdateAspectTypeVariableParamsWithTimeout(timeout time.Duration) *UpdateAspectTypeVariableParams {
	return &UpdateAspectTypeVariableParams{
		timeout: timeout,
	}
}

// NewUpdateAspectTypeVariableParamsWithContext creates a new UpdateAspectTypeVariableParams object
// with the ability to set a context for a request.
func NewUpdateAspectTypeVariableParamsWithContext(ctx context.Context) *UpdateAspectTypeVariableParams {
	return &UpdateAspectTypeVariableParams{
		Context: ctx,
	}
}

// NewUpdateAspectTypeVariableParamsWithHTTPClient creates a new UpdateAspectTypeVariableParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateAspectTypeVariableParamsWithHTTPClient(client *http.Client) *UpdateAspectTypeVariableParams {
	return &UpdateAspectTypeVariableParams{
		HTTPClient: client,
	}
}

/*
UpdateAspectTypeVariableParams contains all the parameters to send to the API endpoint

	for the update aspect type variable operation.

	Typically these are written to a http.Request.
*/
type UpdateAspectTypeVariableParams struct {

	/* IfMatch.

	   Last known version of asset type to facilitate optimistic locking. Etag from asset type response to be used.
	*/
	IfMatch string

	/* ID.

	   The type's id is a unique identifier. The id's length must be between 1 and 128 characters and matches the following symbols "A-Z", "a-z", "0-9", "_" and "." beginning with the tenant prefix what has a maximum of 8 characters. (e.g . ten_pref.type_id)
	*/
	ID string

	/* VariableMap.

	     Variables Dictionary, where variable Name is the key and value is the variable definition object.
	* To update existing variable in aspect type, dictionary should contain key as variable name and value as variable object with details to be updated.
	* To delete variables, key should be name of the variable to be deleted and value should be null.
	* To add new variables, key should be non exisiting variable name and value should be variable definition object.
	*/
	VariableMap models.AspectVariableUpdateMap

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update aspect type variable params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateAspectTypeVariableParams) WithDefaults() *UpdateAspectTypeVariableParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update aspect type variable params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateAspectTypeVariableParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) WithTimeout(timeout time.Duration) *UpdateAspectTypeVariableParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) WithContext(ctx context.Context) *UpdateAspectTypeVariableParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) WithHTTPClient(client *http.Client) *UpdateAspectTypeVariableParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfMatch adds the ifMatch to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) WithIfMatch(ifMatch string) *UpdateAspectTypeVariableParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) SetIfMatch(ifMatch string) {
	o.IfMatch = ifMatch
}

// WithID adds the id to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) WithID(id string) *UpdateAspectTypeVariableParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) SetID(id string) {
	o.ID = id
}

// WithVariableMap adds the variableMap to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) WithVariableMap(variableMap models.AspectVariableUpdateMap) *UpdateAspectTypeVariableParams {
	o.SetVariableMap(variableMap)
	return o
}

// SetVariableMap adds the variableMap to the update aspect type variable params
func (o *UpdateAspectTypeVariableParams) SetVariableMap(variableMap models.AspectVariableUpdateMap) {
	o.VariableMap = variableMap
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateAspectTypeVariableParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param If-Match
	if err := r.SetHeaderParam("If-Match", o.IfMatch); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}
	if o.VariableMap != nil {
		if err := r.SetBodyParam(o.VariableMap); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
