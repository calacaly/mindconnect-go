// Code generated by go-swagger; DO NOT EDIT.

package aspecttype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// ListAspectTypesReader is a Reader for the ListAspectTypes structure.
type ListAspectTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAspectTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAspectTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewListAspectTypesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewListAspectTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAspectTypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAspectTypesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAspectTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /aspecttypes] listAspectTypes", response, response.Code())
	}
}

// NewListAspectTypesOK creates a ListAspectTypesOK with default headers values
func NewListAspectTypesOK() *ListAspectTypesOK {
	return &ListAspectTypesOK{}
}

/*
ListAspectTypesOK describes a response with status code 200, with default header values.

Array of aspect types matched the tenant scope and filter criterias
*/
type ListAspectTypesOK struct {

	/* Shallow ETag of the resource
	 */
	ETag string

	Payload *models.AspectTypeListResource
}

// IsSuccess returns true when this list aspect types o k response has a 2xx status code
func (o *ListAspectTypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list aspect types o k response has a 3xx status code
func (o *ListAspectTypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aspect types o k response has a 4xx status code
func (o *ListAspectTypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list aspect types o k response has a 5xx status code
func (o *ListAspectTypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list aspect types o k response a status code equal to that given
func (o *ListAspectTypesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list aspect types o k response
func (o *ListAspectTypesOK) Code() int {
	return 200
}

func (o *ListAspectTypesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesOK %s", 200, payload)
}

func (o *ListAspectTypesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesOK %s", 200, payload)
}

func (o *ListAspectTypesOK) GetPayload() *models.AspectTypeListResource {
	return o.Payload
}

func (o *ListAspectTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	o.Payload = new(models.AspectTypeListResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAspectTypesNotModified creates a ListAspectTypesNotModified with default headers values
func NewListAspectTypesNotModified() *ListAspectTypesNotModified {
	return &ListAspectTypesNotModified{}
}

/*
ListAspectTypesNotModified describes a response with status code 304, with default header values.

Aspect-types page not changed
*/
type ListAspectTypesNotModified struct {
}

// IsSuccess returns true when this list aspect types not modified response has a 2xx status code
func (o *ListAspectTypesNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aspect types not modified response has a 3xx status code
func (o *ListAspectTypesNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this list aspect types not modified response has a 4xx status code
func (o *ListAspectTypesNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this list aspect types not modified response has a 5xx status code
func (o *ListAspectTypesNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this list aspect types not modified response a status code equal to that given
func (o *ListAspectTypesNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the list aspect types not modified response
func (o *ListAspectTypesNotModified) Code() int {
	return 304
}

func (o *ListAspectTypesNotModified) Error() string {
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesNotModified", 304)
}

func (o *ListAspectTypesNotModified) String() string {
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesNotModified", 304)
}

func (o *ListAspectTypesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAspectTypesBadRequest creates a ListAspectTypesBadRequest with default headers values
func NewListAspectTypesBadRequest() *ListAspectTypesBadRequest {
	return &ListAspectTypesBadRequest{}
}

/*
ListAspectTypesBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type ListAspectTypesBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list aspect types bad request response has a 2xx status code
func (o *ListAspectTypesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aspect types bad request response has a 3xx status code
func (o *ListAspectTypesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aspect types bad request response has a 4xx status code
func (o *ListAspectTypesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aspect types bad request response has a 5xx status code
func (o *ListAspectTypesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list aspect types bad request response a status code equal to that given
func (o *ListAspectTypesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list aspect types bad request response
func (o *ListAspectTypesBadRequest) Code() int {
	return 400
}

func (o *ListAspectTypesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesBadRequest %s", 400, payload)
}

func (o *ListAspectTypesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesBadRequest %s", 400, payload)
}

func (o *ListAspectTypesBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAspectTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAspectTypesUnauthorized creates a ListAspectTypesUnauthorized with default headers values
func NewListAspectTypesUnauthorized() *ListAspectTypesUnauthorized {
	return &ListAspectTypesUnauthorized{}
}

/*
ListAspectTypesUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListAspectTypesUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list aspect types unauthorized response has a 2xx status code
func (o *ListAspectTypesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aspect types unauthorized response has a 3xx status code
func (o *ListAspectTypesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aspect types unauthorized response has a 4xx status code
func (o *ListAspectTypesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aspect types unauthorized response has a 5xx status code
func (o *ListAspectTypesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list aspect types unauthorized response a status code equal to that given
func (o *ListAspectTypesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list aspect types unauthorized response
func (o *ListAspectTypesUnauthorized) Code() int {
	return 401
}

func (o *ListAspectTypesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesUnauthorized %s", 401, payload)
}

func (o *ListAspectTypesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesUnauthorized %s", 401, payload)
}

func (o *ListAspectTypesUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAspectTypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAspectTypesForbidden creates a ListAspectTypesForbidden with default headers values
func NewListAspectTypesForbidden() *ListAspectTypesForbidden {
	return &ListAspectTypesForbidden{}
}

/*
ListAspectTypesForbidden describes a response with status code 403, with default header values.

User is not authorized for request
*/
type ListAspectTypesForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list aspect types forbidden response has a 2xx status code
func (o *ListAspectTypesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aspect types forbidden response has a 3xx status code
func (o *ListAspectTypesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aspect types forbidden response has a 4xx status code
func (o *ListAspectTypesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list aspect types forbidden response has a 5xx status code
func (o *ListAspectTypesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list aspect types forbidden response a status code equal to that given
func (o *ListAspectTypesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list aspect types forbidden response
func (o *ListAspectTypesForbidden) Code() int {
	return 403
}

func (o *ListAspectTypesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesForbidden %s", 403, payload)
}

func (o *ListAspectTypesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesForbidden %s", 403, payload)
}

func (o *ListAspectTypesForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAspectTypesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAspectTypesInternalServerError creates a ListAspectTypesInternalServerError with default headers values
func NewListAspectTypesInternalServerError() *ListAspectTypesInternalServerError {
	return &ListAspectTypesInternalServerError{}
}

/*
ListAspectTypesInternalServerError describes a response with status code 500, with default header values.

Server error, for more information see errorcode and message
*/
type ListAspectTypesInternalServerError struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list aspect types internal server error response has a 2xx status code
func (o *ListAspectTypesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list aspect types internal server error response has a 3xx status code
func (o *ListAspectTypesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list aspect types internal server error response has a 4xx status code
func (o *ListAspectTypesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list aspect types internal server error response has a 5xx status code
func (o *ListAspectTypesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list aspect types internal server error response a status code equal to that given
func (o *ListAspectTypesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list aspect types internal server error response
func (o *ListAspectTypesInternalServerError) Code() int {
	return 500
}

func (o *ListAspectTypesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesInternalServerError %s", 500, payload)
}

func (o *ListAspectTypesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /aspecttypes][%d] listAspectTypesInternalServerError %s", 500, payload)
}

func (o *ListAspectTypesInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAspectTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
