// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRootAssetParams creates a new GetRootAssetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRootAssetParams() *GetRootAssetParams {
	return &GetRootAssetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRootAssetParamsWithTimeout creates a new GetRootAssetParams object
// with the ability to set a timeout on a request.
func NewGetRootAssetParamsWithTimeout(timeout time.Duration) *GetRootAssetParams {
	return &GetRootAssetParams{
		timeout: timeout,
	}
}

// NewGetRootAssetParamsWithContext creates a new GetRootAssetParams object
// with the ability to set a context for a request.
func NewGetRootAssetParamsWithContext(ctx context.Context) *GetRootAssetParams {
	return &GetRootAssetParams{
		Context: ctx,
	}
}

// NewGetRootAssetParamsWithHTTPClient creates a new GetRootAssetParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRootAssetParamsWithHTTPClient(client *http.Client) *GetRootAssetParams {
	return &GetRootAssetParams{
		HTTPClient: client,
	}
}

/*
GetRootAssetParams contains all the parameters to send to the API endpoint

	for the get root asset operation.

	Typically these are written to a http.Request.
*/
type GetRootAssetParams struct {

	/* IfNoneMatch.

	   ETag hash of previous request to allow caching
	*/
	IfNoneMatch *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get root asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRootAssetParams) WithDefaults() *GetRootAssetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get root asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRootAssetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get root asset params
func (o *GetRootAssetParams) WithTimeout(timeout time.Duration) *GetRootAssetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get root asset params
func (o *GetRootAssetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get root asset params
func (o *GetRootAssetParams) WithContext(ctx context.Context) *GetRootAssetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get root asset params
func (o *GetRootAssetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get root asset params
func (o *GetRootAssetParams) WithHTTPClient(client *http.Client) *GetRootAssetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get root asset params
func (o *GetRootAssetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfNoneMatch adds the ifNoneMatch to the get root asset params
func (o *GetRootAssetParams) WithIfNoneMatch(ifNoneMatch *string) *GetRootAssetParams {
	o.SetIfNoneMatch(ifNoneMatch)
	return o
}

// SetIfNoneMatch adds the ifNoneMatch to the get root asset params
func (o *GetRootAssetParams) SetIfNoneMatch(ifNoneMatch *string) {
	o.IfNoneMatch = ifNoneMatch
}

// WriteToRequest writes these params to a swagger request
func (o *GetRootAssetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfNoneMatch != nil {

		// header param If-None-Match
		if err := r.SetHeaderParam("If-None-Match", *o.IfNoneMatch); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
