// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// ListAssetsReader is a Reader for the ListAssets structure.
type ListAssetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAssetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAssetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewListAssetsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewListAssetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAssetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAssetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAssetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewListAssetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /assets] listAssets", response, response.Code())
	}
}

// NewListAssetsOK creates a ListAssetsOK with default headers values
func NewListAssetsOK() *ListAssetsOK {
	return &ListAssetsOK{}
}

/*
ListAssetsOK describes a response with status code 200, with default header values.

Array of assets matched the tenant scope and filter criterias
*/
type ListAssetsOK struct {

	/* The hash of the response's content
	 */
	ETag string

	Payload *models.AssetListResource
}

// IsSuccess returns true when this list assets o k response has a 2xx status code
func (o *ListAssetsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list assets o k response has a 3xx status code
func (o *ListAssetsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list assets o k response has a 4xx status code
func (o *ListAssetsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list assets o k response has a 5xx status code
func (o *ListAssetsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list assets o k response a status code equal to that given
func (o *ListAssetsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list assets o k response
func (o *ListAssetsOK) Code() int {
	return 200
}

func (o *ListAssetsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsOK %s", 200, payload)
}

func (o *ListAssetsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsOK %s", 200, payload)
}

func (o *ListAssetsOK) GetPayload() *models.AssetListResource {
	return o.Payload
}

func (o *ListAssetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	o.Payload = new(models.AssetListResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAssetsNotModified creates a ListAssetsNotModified with default headers values
func NewListAssetsNotModified() *ListAssetsNotModified {
	return &ListAssetsNotModified{}
}

/*
ListAssetsNotModified describes a response with status code 304, with default header values.

The answer's content has not changed since the last request
*/
type ListAssetsNotModified struct {
}

// IsSuccess returns true when this list assets not modified response has a 2xx status code
func (o *ListAssetsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list assets not modified response has a 3xx status code
func (o *ListAssetsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this list assets not modified response has a 4xx status code
func (o *ListAssetsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this list assets not modified response has a 5xx status code
func (o *ListAssetsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this list assets not modified response a status code equal to that given
func (o *ListAssetsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the list assets not modified response
func (o *ListAssetsNotModified) Code() int {
	return 304
}

func (o *ListAssetsNotModified) Error() string {
	return fmt.Sprintf("[GET /assets][%d] listAssetsNotModified", 304)
}

func (o *ListAssetsNotModified) String() string {
	return fmt.Sprintf("[GET /assets][%d] listAssetsNotModified", 304)
}

func (o *ListAssetsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAssetsBadRequest creates a ListAssetsBadRequest with default headers values
func NewListAssetsBadRequest() *ListAssetsBadRequest {
	return &ListAssetsBadRequest{}
}

/*
ListAssetsBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type ListAssetsBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list assets bad request response has a 2xx status code
func (o *ListAssetsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list assets bad request response has a 3xx status code
func (o *ListAssetsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list assets bad request response has a 4xx status code
func (o *ListAssetsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list assets bad request response has a 5xx status code
func (o *ListAssetsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list assets bad request response a status code equal to that given
func (o *ListAssetsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list assets bad request response
func (o *ListAssetsBadRequest) Code() int {
	return 400
}

func (o *ListAssetsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsBadRequest %s", 400, payload)
}

func (o *ListAssetsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsBadRequest %s", 400, payload)
}

func (o *ListAssetsBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAssetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAssetsUnauthorized creates a ListAssetsUnauthorized with default headers values
func NewListAssetsUnauthorized() *ListAssetsUnauthorized {
	return &ListAssetsUnauthorized{}
}

/*
ListAssetsUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListAssetsUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list assets unauthorized response has a 2xx status code
func (o *ListAssetsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list assets unauthorized response has a 3xx status code
func (o *ListAssetsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list assets unauthorized response has a 4xx status code
func (o *ListAssetsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list assets unauthorized response has a 5xx status code
func (o *ListAssetsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list assets unauthorized response a status code equal to that given
func (o *ListAssetsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list assets unauthorized response
func (o *ListAssetsUnauthorized) Code() int {
	return 401
}

func (o *ListAssetsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsUnauthorized %s", 401, payload)
}

func (o *ListAssetsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsUnauthorized %s", 401, payload)
}

func (o *ListAssetsUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAssetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAssetsForbidden creates a ListAssetsForbidden with default headers values
func NewListAssetsForbidden() *ListAssetsForbidden {
	return &ListAssetsForbidden{}
}

/*
ListAssetsForbidden describes a response with status code 403, with default header values.

User is not authorized for request
*/
type ListAssetsForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list assets forbidden response has a 2xx status code
func (o *ListAssetsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list assets forbidden response has a 3xx status code
func (o *ListAssetsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list assets forbidden response has a 4xx status code
func (o *ListAssetsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list assets forbidden response has a 5xx status code
func (o *ListAssetsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list assets forbidden response a status code equal to that given
func (o *ListAssetsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list assets forbidden response
func (o *ListAssetsForbidden) Code() int {
	return 403
}

func (o *ListAssetsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsForbidden %s", 403, payload)
}

func (o *ListAssetsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsForbidden %s", 403, payload)
}

func (o *ListAssetsForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAssetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAssetsInternalServerError creates a ListAssetsInternalServerError with default headers values
func NewListAssetsInternalServerError() *ListAssetsInternalServerError {
	return &ListAssetsInternalServerError{}
}

/*
ListAssetsInternalServerError describes a response with status code 500, with default header values.

Server error, for more information see errorcode and message
*/
type ListAssetsInternalServerError struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list assets internal server error response has a 2xx status code
func (o *ListAssetsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list assets internal server error response has a 3xx status code
func (o *ListAssetsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list assets internal server error response has a 4xx status code
func (o *ListAssetsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list assets internal server error response has a 5xx status code
func (o *ListAssetsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list assets internal server error response a status code equal to that given
func (o *ListAssetsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list assets internal server error response
func (o *ListAssetsInternalServerError) Code() int {
	return 500
}

func (o *ListAssetsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsInternalServerError %s", 500, payload)
}

func (o *ListAssetsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsInternalServerError %s", 500, payload)
}

func (o *ListAssetsInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAssetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAssetsServiceUnavailable creates a ListAssetsServiceUnavailable with default headers values
func NewListAssetsServiceUnavailable() *ListAssetsServiceUnavailable {
	return &ListAssetsServiceUnavailable{}
}

/*
ListAssetsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable, for more information see errorcode and message
*/
type ListAssetsServiceUnavailable struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list assets service unavailable response has a 2xx status code
func (o *ListAssetsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list assets service unavailable response has a 3xx status code
func (o *ListAssetsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list assets service unavailable response has a 4xx status code
func (o *ListAssetsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this list assets service unavailable response has a 5xx status code
func (o *ListAssetsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this list assets service unavailable response a status code equal to that given
func (o *ListAssetsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the list assets service unavailable response
func (o *ListAssetsServiceUnavailable) Code() int {
	return 503
}

func (o *ListAssetsServiceUnavailable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsServiceUnavailable %s", 503, payload)
}

func (o *ListAssetsServiceUnavailable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /assets][%d] listAssetsServiceUnavailable %s", 503, payload)
}

func (o *ListAssetsServiceUnavailable) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAssetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
