// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// MoveAssetReader is a Reader for the MoveAsset structure.
type MoveAssetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MoveAssetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMoveAssetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMoveAssetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMoveAssetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMoveAssetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMoveAssetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewMoveAssetPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMoveAssetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewMoveAssetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /assets/{id}/move] moveAsset", response, response.Code())
	}
}

// NewMoveAssetOK creates a MoveAssetOK with default headers values
func NewMoveAssetOK() *MoveAssetOK {
	return &MoveAssetOK{}
}

/*
MoveAssetOK describes a response with status code 200, with default header values.

The asset is moved
*/
type MoveAssetOK struct {
	Payload *models.AssetResourceWithHierarchyPath
}

// IsSuccess returns true when this move asset o k response has a 2xx status code
func (o *MoveAssetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this move asset o k response has a 3xx status code
func (o *MoveAssetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset o k response has a 4xx status code
func (o *MoveAssetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this move asset o k response has a 5xx status code
func (o *MoveAssetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this move asset o k response a status code equal to that given
func (o *MoveAssetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the move asset o k response
func (o *MoveAssetOK) Code() int {
	return 200
}

func (o *MoveAssetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetOK %s", 200, payload)
}

func (o *MoveAssetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetOK %s", 200, payload)
}

func (o *MoveAssetOK) GetPayload() *models.AssetResourceWithHierarchyPath {
	return o.Payload
}

func (o *MoveAssetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssetResourceWithHierarchyPath)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveAssetBadRequest creates a MoveAssetBadRequest with default headers values
func NewMoveAssetBadRequest() *MoveAssetBadRequest {
	return &MoveAssetBadRequest{}
}

/*
MoveAssetBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type MoveAssetBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this move asset bad request response has a 2xx status code
func (o *MoveAssetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this move asset bad request response has a 3xx status code
func (o *MoveAssetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset bad request response has a 4xx status code
func (o *MoveAssetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this move asset bad request response has a 5xx status code
func (o *MoveAssetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this move asset bad request response a status code equal to that given
func (o *MoveAssetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the move asset bad request response
func (o *MoveAssetBadRequest) Code() int {
	return 400
}

func (o *MoveAssetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetBadRequest %s", 400, payload)
}

func (o *MoveAssetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetBadRequest %s", 400, payload)
}

func (o *MoveAssetBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *MoveAssetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveAssetUnauthorized creates a MoveAssetUnauthorized with default headers values
func NewMoveAssetUnauthorized() *MoveAssetUnauthorized {
	return &MoveAssetUnauthorized{}
}

/*
MoveAssetUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type MoveAssetUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this move asset unauthorized response has a 2xx status code
func (o *MoveAssetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this move asset unauthorized response has a 3xx status code
func (o *MoveAssetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset unauthorized response has a 4xx status code
func (o *MoveAssetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this move asset unauthorized response has a 5xx status code
func (o *MoveAssetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this move asset unauthorized response a status code equal to that given
func (o *MoveAssetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the move asset unauthorized response
func (o *MoveAssetUnauthorized) Code() int {
	return 401
}

func (o *MoveAssetUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetUnauthorized %s", 401, payload)
}

func (o *MoveAssetUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetUnauthorized %s", 401, payload)
}

func (o *MoveAssetUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *MoveAssetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveAssetForbidden creates a MoveAssetForbidden with default headers values
func NewMoveAssetForbidden() *MoveAssetForbidden {
	return &MoveAssetForbidden{}
}

/*
MoveAssetForbidden describes a response with status code 403, with default header values.

User is not authorized for request
*/
type MoveAssetForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this move asset forbidden response has a 2xx status code
func (o *MoveAssetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this move asset forbidden response has a 3xx status code
func (o *MoveAssetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset forbidden response has a 4xx status code
func (o *MoveAssetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this move asset forbidden response has a 5xx status code
func (o *MoveAssetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this move asset forbidden response a status code equal to that given
func (o *MoveAssetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the move asset forbidden response
func (o *MoveAssetForbidden) Code() int {
	return 403
}

func (o *MoveAssetForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetForbidden %s", 403, payload)
}

func (o *MoveAssetForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetForbidden %s", 403, payload)
}

func (o *MoveAssetForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *MoveAssetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveAssetNotFound creates a MoveAssetNotFound with default headers values
func NewMoveAssetNotFound() *MoveAssetNotFound {
	return &MoveAssetNotFound{}
}

/*
MoveAssetNotFound describes a response with status code 404, with default header values.

Asset not found
*/
type MoveAssetNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this move asset not found response has a 2xx status code
func (o *MoveAssetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this move asset not found response has a 3xx status code
func (o *MoveAssetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset not found response has a 4xx status code
func (o *MoveAssetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this move asset not found response has a 5xx status code
func (o *MoveAssetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this move asset not found response a status code equal to that given
func (o *MoveAssetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the move asset not found response
func (o *MoveAssetNotFound) Code() int {
	return 404
}

func (o *MoveAssetNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetNotFound %s", 404, payload)
}

func (o *MoveAssetNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetNotFound %s", 404, payload)
}

func (o *MoveAssetNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *MoveAssetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveAssetPreconditionFailed creates a MoveAssetPreconditionFailed with default headers values
func NewMoveAssetPreconditionFailed() *MoveAssetPreconditionFailed {
	return &MoveAssetPreconditionFailed{}
}

/*
MoveAssetPreconditionFailed describes a response with status code 412, with default header values.

Asset is changed in the background
*/
type MoveAssetPreconditionFailed struct {
	Payload *models.Errors
}

// IsSuccess returns true when this move asset precondition failed response has a 2xx status code
func (o *MoveAssetPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this move asset precondition failed response has a 3xx status code
func (o *MoveAssetPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset precondition failed response has a 4xx status code
func (o *MoveAssetPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this move asset precondition failed response has a 5xx status code
func (o *MoveAssetPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this move asset precondition failed response a status code equal to that given
func (o *MoveAssetPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the move asset precondition failed response
func (o *MoveAssetPreconditionFailed) Code() int {
	return 412
}

func (o *MoveAssetPreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetPreconditionFailed %s", 412, payload)
}

func (o *MoveAssetPreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetPreconditionFailed %s", 412, payload)
}

func (o *MoveAssetPreconditionFailed) GetPayload() *models.Errors {
	return o.Payload
}

func (o *MoveAssetPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveAssetInternalServerError creates a MoveAssetInternalServerError with default headers values
func NewMoveAssetInternalServerError() *MoveAssetInternalServerError {
	return &MoveAssetInternalServerError{}
}

/*
MoveAssetInternalServerError describes a response with status code 500, with default header values.

Server error, for more information see errorcode and message
*/
type MoveAssetInternalServerError struct {
	Payload *models.Errors
}

// IsSuccess returns true when this move asset internal server error response has a 2xx status code
func (o *MoveAssetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this move asset internal server error response has a 3xx status code
func (o *MoveAssetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset internal server error response has a 4xx status code
func (o *MoveAssetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this move asset internal server error response has a 5xx status code
func (o *MoveAssetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this move asset internal server error response a status code equal to that given
func (o *MoveAssetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the move asset internal server error response
func (o *MoveAssetInternalServerError) Code() int {
	return 500
}

func (o *MoveAssetInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetInternalServerError %s", 500, payload)
}

func (o *MoveAssetInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetInternalServerError %s", 500, payload)
}

func (o *MoveAssetInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *MoveAssetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveAssetServiceUnavailable creates a MoveAssetServiceUnavailable with default headers values
func NewMoveAssetServiceUnavailable() *MoveAssetServiceUnavailable {
	return &MoveAssetServiceUnavailable{}
}

/*
MoveAssetServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable, for more information see errorcode and message
*/
type MoveAssetServiceUnavailable struct {
	Payload *models.Errors
}

// IsSuccess returns true when this move asset service unavailable response has a 2xx status code
func (o *MoveAssetServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this move asset service unavailable response has a 3xx status code
func (o *MoveAssetServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this move asset service unavailable response has a 4xx status code
func (o *MoveAssetServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this move asset service unavailable response has a 5xx status code
func (o *MoveAssetServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this move asset service unavailable response a status code equal to that given
func (o *MoveAssetServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the move asset service unavailable response
func (o *MoveAssetServiceUnavailable) Code() int {
	return 503
}

func (o *MoveAssetServiceUnavailable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetServiceUnavailable %s", 503, payload)
}

func (o *MoveAssetServiceUnavailable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /assets/{id}/move][%d] moveAssetServiceUnavailable %s", 503, payload)
}

func (o *MoveAssetServiceUnavailable) GetPayload() *models.Errors {
	return o.Payload
}

func (o *MoveAssetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
