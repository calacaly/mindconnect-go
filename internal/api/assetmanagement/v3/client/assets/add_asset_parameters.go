// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// NewAddAssetParams creates a new AddAssetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddAssetParams() *AddAssetParams {
	return &AddAssetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddAssetParamsWithTimeout creates a new AddAssetParams object
// with the ability to set a timeout on a request.
func NewAddAssetParamsWithTimeout(timeout time.Duration) *AddAssetParams {
	return &AddAssetParams{
		timeout: timeout,
	}
}

// NewAddAssetParamsWithContext creates a new AddAssetParams object
// with the ability to set a context for a request.
func NewAddAssetParamsWithContext(ctx context.Context) *AddAssetParams {
	return &AddAssetParams{
		Context: ctx,
	}
}

// NewAddAssetParamsWithHTTPClient creates a new AddAssetParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddAssetParamsWithHTTPClient(client *http.Client) *AddAssetParams {
	return &AddAssetParams{
		HTTPClient: client,
	}
}

/*
AddAssetParams contains all the parameters to send to the API endpoint

	for the add asset operation.

	Typically these are written to a http.Request.
*/
type AddAssetParams struct {

	/* Asset.

	   asset
	*/
	Asset *models.Asset

	/* IncludeShared.

	   Specifies if the operation should take into account shared (received) assets, aspects and asset types. Received resources are not visible in case includeShared=false. For query operations, received resources are not returned. Endpoints addressing individual resources respond with 404. In case received resources are referenced in a request parameter or property, they are treated as not existing.
	*/
	IncludeShared *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddAssetParams) WithDefaults() *AddAssetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddAssetParams) SetDefaults() {
	var (
		includeSharedDefault = bool(false)
	)

	val := AddAssetParams{
		IncludeShared: &includeSharedDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the add asset params
func (o *AddAssetParams) WithTimeout(timeout time.Duration) *AddAssetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add asset params
func (o *AddAssetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add asset params
func (o *AddAssetParams) WithContext(ctx context.Context) *AddAssetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add asset params
func (o *AddAssetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add asset params
func (o *AddAssetParams) WithHTTPClient(client *http.Client) *AddAssetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add asset params
func (o *AddAssetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAsset adds the asset to the add asset params
func (o *AddAssetParams) WithAsset(asset *models.Asset) *AddAssetParams {
	o.SetAsset(asset)
	return o
}

// SetAsset adds the asset to the add asset params
func (o *AddAssetParams) SetAsset(asset *models.Asset) {
	o.Asset = asset
}

// WithIncludeShared adds the includeShared to the add asset params
func (o *AddAssetParams) WithIncludeShared(includeShared *bool) *AddAssetParams {
	o.SetIncludeShared(includeShared)
	return o
}

// SetIncludeShared adds the includeShared to the add asset params
func (o *AddAssetParams) SetIncludeShared(includeShared *bool) {
	o.IncludeShared = includeShared
}

// WriteToRequest writes these params to a swagger request
func (o *AddAssetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Asset != nil {
		if err := r.SetBodyParam(o.Asset); err != nil {
			return err
		}
	}

	if o.IncludeShared != nil {

		// query param includeShared
		var qrIncludeShared bool

		if o.IncludeShared != nil {
			qrIncludeShared = *o.IncludeShared
		}
		qIncludeShared := swag.FormatBool(qrIncludeShared)
		if qIncludeShared != "" {

			if err := r.SetQueryParam("includeShared", qIncludeShared); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
