// Code generated by go-swagger; DO NOT EDIT.

package assetmodellock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPutAssetModelLockParams creates a new PutAssetModelLockParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutAssetModelLockParams() *PutAssetModelLockParams {
	return &PutAssetModelLockParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutAssetModelLockParamsWithTimeout creates a new PutAssetModelLockParams object
// with the ability to set a timeout on a request.
func NewPutAssetModelLockParamsWithTimeout(timeout time.Duration) *PutAssetModelLockParams {
	return &PutAssetModelLockParams{
		timeout: timeout,
	}
}

// NewPutAssetModelLockParamsWithContext creates a new PutAssetModelLockParams object
// with the ability to set a context for a request.
func NewPutAssetModelLockParamsWithContext(ctx context.Context) *PutAssetModelLockParams {
	return &PutAssetModelLockParams{
		Context: ctx,
	}
}

// NewPutAssetModelLockParamsWithHTTPClient creates a new PutAssetModelLockParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutAssetModelLockParamsWithHTTPClient(client *http.Client) *PutAssetModelLockParams {
	return &PutAssetModelLockParams{
		HTTPClient: client,
	}
}

/*
PutAssetModelLockParams contains all the parameters to send to the API endpoint

	for the put asset model lock operation.

	Typically these are written to a http.Request.
*/
type PutAssetModelLockParams struct {

	/* Enabled.

	   Lock state of an asset model
	*/
	Enabled bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put asset model lock params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutAssetModelLockParams) WithDefaults() *PutAssetModelLockParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put asset model lock params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutAssetModelLockParams) SetDefaults() {
	var (
		enabledDefault = bool(false)
	)

	val := PutAssetModelLockParams{
		Enabled: enabledDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the put asset model lock params
func (o *PutAssetModelLockParams) WithTimeout(timeout time.Duration) *PutAssetModelLockParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put asset model lock params
func (o *PutAssetModelLockParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put asset model lock params
func (o *PutAssetModelLockParams) WithContext(ctx context.Context) *PutAssetModelLockParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put asset model lock params
func (o *PutAssetModelLockParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put asset model lock params
func (o *PutAssetModelLockParams) WithHTTPClient(client *http.Client) *PutAssetModelLockParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put asset model lock params
func (o *PutAssetModelLockParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnabled adds the enabled to the put asset model lock params
func (o *PutAssetModelLockParams) WithEnabled(enabled bool) *PutAssetModelLockParams {
	o.SetEnabled(enabled)
	return o
}

// SetEnabled adds the enabled to the put asset model lock params
func (o *PutAssetModelLockParams) SetEnabled(enabled bool) {
	o.Enabled = enabled
}

// WriteToRequest writes these params to a swagger request
func (o *PutAssetModelLockParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param enabled
	qrEnabled := o.Enabled
	qEnabled := swag.FormatBool(qrEnabled)
	if qEnabled != "" {

		if err := r.SetQueryParam("enabled", qEnabled); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
