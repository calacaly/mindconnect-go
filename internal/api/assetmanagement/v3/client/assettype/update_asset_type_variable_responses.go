// Code generated by go-swagger; DO NOT EDIT.

package assettype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// UpdateAssetTypeVariableReader is a Reader for the UpdateAssetTypeVariable structure.
type UpdateAssetTypeVariableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAssetTypeVariableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateAssetTypeVariableNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAssetTypeVariableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAssetTypeVariableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAssetTypeVariableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAssetTypeVariableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewUpdateAssetTypeVariablePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAssetTypeVariableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /assettypes/{id}/variables] updateAssetTypeVariable", response, response.Code())
	}
}

// NewUpdateAssetTypeVariableNoContent creates a UpdateAssetTypeVariableNoContent with default headers values
func NewUpdateAssetTypeVariableNoContent() *UpdateAssetTypeVariableNoContent {
	return &UpdateAssetTypeVariableNoContent{}
}

/*
UpdateAssetTypeVariableNoContent describes a response with status code 204, with default header values.

The variable's has been updated
*/
type UpdateAssetTypeVariableNoContent struct {

	/* AssetType ETag value for further updates
	 */
	ETag int64
}

// IsSuccess returns true when this update asset type variable no content response has a 2xx status code
func (o *UpdateAssetTypeVariableNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update asset type variable no content response has a 3xx status code
func (o *UpdateAssetTypeVariableNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update asset type variable no content response has a 4xx status code
func (o *UpdateAssetTypeVariableNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update asset type variable no content response has a 5xx status code
func (o *UpdateAssetTypeVariableNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update asset type variable no content response a status code equal to that given
func (o *UpdateAssetTypeVariableNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update asset type variable no content response
func (o *UpdateAssetTypeVariableNoContent) Code() int {
	return 204
}

func (o *UpdateAssetTypeVariableNoContent) Error() string {
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableNoContent", 204)
}

func (o *UpdateAssetTypeVariableNoContent) String() string {
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableNoContent", 204)
}

func (o *UpdateAssetTypeVariableNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		valeTag, err := swag.ConvertInt64(hdrETag)
		if err != nil {
			return errors.InvalidType("ETag", "header", "int64", hdrETag)
		}
		o.ETag = valeTag
	}

	return nil
}

// NewUpdateAssetTypeVariableBadRequest creates a UpdateAssetTypeVariableBadRequest with default headers values
func NewUpdateAssetTypeVariableBadRequest() *UpdateAssetTypeVariableBadRequest {
	return &UpdateAssetTypeVariableBadRequest{}
}

/*
UpdateAssetTypeVariableBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type UpdateAssetTypeVariableBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update asset type variable bad request response has a 2xx status code
func (o *UpdateAssetTypeVariableBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update asset type variable bad request response has a 3xx status code
func (o *UpdateAssetTypeVariableBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update asset type variable bad request response has a 4xx status code
func (o *UpdateAssetTypeVariableBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update asset type variable bad request response has a 5xx status code
func (o *UpdateAssetTypeVariableBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update asset type variable bad request response a status code equal to that given
func (o *UpdateAssetTypeVariableBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update asset type variable bad request response
func (o *UpdateAssetTypeVariableBadRequest) Code() int {
	return 400
}

func (o *UpdateAssetTypeVariableBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableBadRequest %s", 400, payload)
}

func (o *UpdateAssetTypeVariableBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableBadRequest %s", 400, payload)
}

func (o *UpdateAssetTypeVariableBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAssetTypeVariableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAssetTypeVariableUnauthorized creates a UpdateAssetTypeVariableUnauthorized with default headers values
func NewUpdateAssetTypeVariableUnauthorized() *UpdateAssetTypeVariableUnauthorized {
	return &UpdateAssetTypeVariableUnauthorized{}
}

/*
UpdateAssetTypeVariableUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type UpdateAssetTypeVariableUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update asset type variable unauthorized response has a 2xx status code
func (o *UpdateAssetTypeVariableUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update asset type variable unauthorized response has a 3xx status code
func (o *UpdateAssetTypeVariableUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update asset type variable unauthorized response has a 4xx status code
func (o *UpdateAssetTypeVariableUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update asset type variable unauthorized response has a 5xx status code
func (o *UpdateAssetTypeVariableUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update asset type variable unauthorized response a status code equal to that given
func (o *UpdateAssetTypeVariableUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update asset type variable unauthorized response
func (o *UpdateAssetTypeVariableUnauthorized) Code() int {
	return 401
}

func (o *UpdateAssetTypeVariableUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableUnauthorized %s", 401, payload)
}

func (o *UpdateAssetTypeVariableUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableUnauthorized %s", 401, payload)
}

func (o *UpdateAssetTypeVariableUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAssetTypeVariableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAssetTypeVariableForbidden creates a UpdateAssetTypeVariableForbidden with default headers values
func NewUpdateAssetTypeVariableForbidden() *UpdateAssetTypeVariableForbidden {
	return &UpdateAssetTypeVariableForbidden{}
}

/*
UpdateAssetTypeVariableForbidden describes a response with status code 403, with default header values.

User is not authorized for request
*/
type UpdateAssetTypeVariableForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update asset type variable forbidden response has a 2xx status code
func (o *UpdateAssetTypeVariableForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update asset type variable forbidden response has a 3xx status code
func (o *UpdateAssetTypeVariableForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update asset type variable forbidden response has a 4xx status code
func (o *UpdateAssetTypeVariableForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update asset type variable forbidden response has a 5xx status code
func (o *UpdateAssetTypeVariableForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update asset type variable forbidden response a status code equal to that given
func (o *UpdateAssetTypeVariableForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update asset type variable forbidden response
func (o *UpdateAssetTypeVariableForbidden) Code() int {
	return 403
}

func (o *UpdateAssetTypeVariableForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableForbidden %s", 403, payload)
}

func (o *UpdateAssetTypeVariableForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableForbidden %s", 403, payload)
}

func (o *UpdateAssetTypeVariableForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAssetTypeVariableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAssetTypeVariableNotFound creates a UpdateAssetTypeVariableNotFound with default headers values
func NewUpdateAssetTypeVariableNotFound() *UpdateAssetTypeVariableNotFound {
	return &UpdateAssetTypeVariableNotFound{}
}

/*
UpdateAssetTypeVariableNotFound describes a response with status code 404, with default header values.

Variable not found in Asset type
*/
type UpdateAssetTypeVariableNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update asset type variable not found response has a 2xx status code
func (o *UpdateAssetTypeVariableNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update asset type variable not found response has a 3xx status code
func (o *UpdateAssetTypeVariableNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update asset type variable not found response has a 4xx status code
func (o *UpdateAssetTypeVariableNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update asset type variable not found response has a 5xx status code
func (o *UpdateAssetTypeVariableNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update asset type variable not found response a status code equal to that given
func (o *UpdateAssetTypeVariableNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update asset type variable not found response
func (o *UpdateAssetTypeVariableNotFound) Code() int {
	return 404
}

func (o *UpdateAssetTypeVariableNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableNotFound %s", 404, payload)
}

func (o *UpdateAssetTypeVariableNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableNotFound %s", 404, payload)
}

func (o *UpdateAssetTypeVariableNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAssetTypeVariableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAssetTypeVariablePreconditionFailed creates a UpdateAssetTypeVariablePreconditionFailed with default headers values
func NewUpdateAssetTypeVariablePreconditionFailed() *UpdateAssetTypeVariablePreconditionFailed {
	return &UpdateAssetTypeVariablePreconditionFailed{}
}

/*
UpdateAssetTypeVariablePreconditionFailed describes a response with status code 412, with default header values.

Asset type or the variable has been changed in the background
*/
type UpdateAssetTypeVariablePreconditionFailed struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update asset type variable precondition failed response has a 2xx status code
func (o *UpdateAssetTypeVariablePreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update asset type variable precondition failed response has a 3xx status code
func (o *UpdateAssetTypeVariablePreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update asset type variable precondition failed response has a 4xx status code
func (o *UpdateAssetTypeVariablePreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update asset type variable precondition failed response has a 5xx status code
func (o *UpdateAssetTypeVariablePreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this update asset type variable precondition failed response a status code equal to that given
func (o *UpdateAssetTypeVariablePreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the update asset type variable precondition failed response
func (o *UpdateAssetTypeVariablePreconditionFailed) Code() int {
	return 412
}

func (o *UpdateAssetTypeVariablePreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariablePreconditionFailed %s", 412, payload)
}

func (o *UpdateAssetTypeVariablePreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariablePreconditionFailed %s", 412, payload)
}

func (o *UpdateAssetTypeVariablePreconditionFailed) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAssetTypeVariablePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAssetTypeVariableInternalServerError creates a UpdateAssetTypeVariableInternalServerError with default headers values
func NewUpdateAssetTypeVariableInternalServerError() *UpdateAssetTypeVariableInternalServerError {
	return &UpdateAssetTypeVariableInternalServerError{}
}

/*
UpdateAssetTypeVariableInternalServerError describes a response with status code 500, with default header values.

Server error, for more information see errorcode and message
*/
type UpdateAssetTypeVariableInternalServerError struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update asset type variable internal server error response has a 2xx status code
func (o *UpdateAssetTypeVariableInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update asset type variable internal server error response has a 3xx status code
func (o *UpdateAssetTypeVariableInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update asset type variable internal server error response has a 4xx status code
func (o *UpdateAssetTypeVariableInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update asset type variable internal server error response has a 5xx status code
func (o *UpdateAssetTypeVariableInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update asset type variable internal server error response a status code equal to that given
func (o *UpdateAssetTypeVariableInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update asset type variable internal server error response
func (o *UpdateAssetTypeVariableInternalServerError) Code() int {
	return 500
}

func (o *UpdateAssetTypeVariableInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableInternalServerError %s", 500, payload)
}

func (o *UpdateAssetTypeVariableInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /assettypes/{id}/variables][%d] updateAssetTypeVariableInternalServerError %s", 500, payload)
}

func (o *UpdateAssetTypeVariableInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAssetTypeVariableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
