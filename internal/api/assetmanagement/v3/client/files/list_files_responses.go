// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/assetmanagement/v3/models"
)

// ListFilesReader is a Reader for the ListFiles structure.
type ListFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewListFilesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewListFilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListFilesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListFilesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListFilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /files] listFiles", response, response.Code())
	}
}

// NewListFilesOK creates a ListFilesOK with default headers values
func NewListFilesOK() *ListFilesOK {
	return &ListFilesOK{}
}

/*
ListFilesOK describes a response with status code 200, with default header values.

Metadata of files visible for the tenant
*/
type ListFilesOK struct {
	Payload *models.FileMetadataListResource
}

// IsSuccess returns true when this list files o k response has a 2xx status code
func (o *ListFilesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list files o k response has a 3xx status code
func (o *ListFilesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files o k response has a 4xx status code
func (o *ListFilesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list files o k response has a 5xx status code
func (o *ListFilesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list files o k response a status code equal to that given
func (o *ListFilesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list files o k response
func (o *ListFilesOK) Code() int {
	return 200
}

func (o *ListFilesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesOK %s", 200, payload)
}

func (o *ListFilesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesOK %s", 200, payload)
}

func (o *ListFilesOK) GetPayload() *models.FileMetadataListResource {
	return o.Payload
}

func (o *ListFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FileMetadataListResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilesNotModified creates a ListFilesNotModified with default headers values
func NewListFilesNotModified() *ListFilesNotModified {
	return &ListFilesNotModified{}
}

/*
ListFilesNotModified describes a response with status code 304, with default header values.

Resource have not been modified
*/
type ListFilesNotModified struct {
}

// IsSuccess returns true when this list files not modified response has a 2xx status code
func (o *ListFilesNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files not modified response has a 3xx status code
func (o *ListFilesNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this list files not modified response has a 4xx status code
func (o *ListFilesNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this list files not modified response has a 5xx status code
func (o *ListFilesNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this list files not modified response a status code equal to that given
func (o *ListFilesNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the list files not modified response
func (o *ListFilesNotModified) Code() int {
	return 304
}

func (o *ListFilesNotModified) Error() string {
	return fmt.Sprintf("[GET /files][%d] listFilesNotModified", 304)
}

func (o *ListFilesNotModified) String() string {
	return fmt.Sprintf("[GET /files][%d] listFilesNotModified", 304)
}

func (o *ListFilesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListFilesBadRequest creates a ListFilesBadRequest with default headers values
func NewListFilesBadRequest() *ListFilesBadRequest {
	return &ListFilesBadRequest{}
}

/*
ListFilesBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type ListFilesBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list files bad request response has a 2xx status code
func (o *ListFilesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files bad request response has a 3xx status code
func (o *ListFilesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files bad request response has a 4xx status code
func (o *ListFilesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files bad request response has a 5xx status code
func (o *ListFilesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list files bad request response a status code equal to that given
func (o *ListFilesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list files bad request response
func (o *ListFilesBadRequest) Code() int {
	return 400
}

func (o *ListFilesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesBadRequest %s", 400, payload)
}

func (o *ListFilesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesBadRequest %s", 400, payload)
}

func (o *ListFilesBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListFilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilesUnauthorized creates a ListFilesUnauthorized with default headers values
func NewListFilesUnauthorized() *ListFilesUnauthorized {
	return &ListFilesUnauthorized{}
}

/*
ListFilesUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListFilesUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list files unauthorized response has a 2xx status code
func (o *ListFilesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files unauthorized response has a 3xx status code
func (o *ListFilesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files unauthorized response has a 4xx status code
func (o *ListFilesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files unauthorized response has a 5xx status code
func (o *ListFilesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list files unauthorized response a status code equal to that given
func (o *ListFilesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list files unauthorized response
func (o *ListFilesUnauthorized) Code() int {
	return 401
}

func (o *ListFilesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesUnauthorized %s", 401, payload)
}

func (o *ListFilesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesUnauthorized %s", 401, payload)
}

func (o *ListFilesUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListFilesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilesForbidden creates a ListFilesForbidden with default headers values
func NewListFilesForbidden() *ListFilesForbidden {
	return &ListFilesForbidden{}
}

/*
ListFilesForbidden describes a response with status code 403, with default header values.

User is not authorized for request
*/
type ListFilesForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list files forbidden response has a 2xx status code
func (o *ListFilesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files forbidden response has a 3xx status code
func (o *ListFilesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files forbidden response has a 4xx status code
func (o *ListFilesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files forbidden response has a 5xx status code
func (o *ListFilesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list files forbidden response a status code equal to that given
func (o *ListFilesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list files forbidden response
func (o *ListFilesForbidden) Code() int {
	return 403
}

func (o *ListFilesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesForbidden %s", 403, payload)
}

func (o *ListFilesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesForbidden %s", 403, payload)
}

func (o *ListFilesForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListFilesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilesInternalServerError creates a ListFilesInternalServerError with default headers values
func NewListFilesInternalServerError() *ListFilesInternalServerError {
	return &ListFilesInternalServerError{}
}

/*
ListFilesInternalServerError describes a response with status code 500, with default header values.

Server error, for more information see errorcode and message
*/
type ListFilesInternalServerError struct {
	Payload *models.Errors
}

// IsSuccess returns true when this list files internal server error response has a 2xx status code
func (o *ListFilesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files internal server error response has a 3xx status code
func (o *ListFilesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files internal server error response has a 4xx status code
func (o *ListFilesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list files internal server error response has a 5xx status code
func (o *ListFilesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list files internal server error response a status code equal to that given
func (o *ListFilesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list files internal server error response
func (o *ListFilesInternalServerError) Code() int {
	return 500
}

func (o *ListFilesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesInternalServerError %s", 500, payload)
}

func (o *ListFilesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /files][%d] listFilesInternalServerError %s", 500, payload)
}

func (o *ListFilesInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListFilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
