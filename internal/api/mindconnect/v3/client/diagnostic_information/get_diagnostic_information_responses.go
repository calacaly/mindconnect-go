// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// GetDiagnosticInformationReader is a Reader for the GetDiagnosticInformation structure.
type GetDiagnosticInformationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiagnosticInformationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDiagnosticInformationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDiagnosticInformationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDiagnosticInformationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDiagnosticInformationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetDiagnosticInformationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDiagnosticInformationOK creates a GetDiagnosticInformationOK with default headers values
func NewGetDiagnosticInformationOK() *GetDiagnosticInformationOK {
	return &GetDiagnosticInformationOK{}
}

/*
GetDiagnosticInformationOK describes a response with status code 200, with default header values.

OK
*/
type GetDiagnosticInformationOK struct {
	Payload *models.PagedDiagnosticInformation
}

// IsSuccess returns true when this get diagnostic information o k response has a 2xx status code
func (o *GetDiagnosticInformationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get diagnostic information o k response has a 3xx status code
func (o *GetDiagnosticInformationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic information o k response has a 4xx status code
func (o *GetDiagnosticInformationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get diagnostic information o k response has a 5xx status code
func (o *GetDiagnosticInformationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic information o k response a status code equal to that given
func (o *GetDiagnosticInformationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get diagnostic information o k response
func (o *GetDiagnosticInformationOK) Code() int {
	return 200
}

func (o *GetDiagnosticInformationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationOK %s", 200, payload)
}

func (o *GetDiagnosticInformationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationOK %s", 200, payload)
}

func (o *GetDiagnosticInformationOK) GetPayload() *models.PagedDiagnosticInformation {
	return o.Payload
}

func (o *GetDiagnosticInformationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedDiagnosticInformation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticInformationBadRequest creates a GetDiagnosticInformationBadRequest with default headers values
func NewGetDiagnosticInformationBadRequest() *GetDiagnosticInformationBadRequest {
	return &GetDiagnosticInformationBadRequest{}
}

/*
GetDiagnosticInformationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDiagnosticInformationBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this get diagnostic information bad request response has a 2xx status code
func (o *GetDiagnosticInformationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic information bad request response has a 3xx status code
func (o *GetDiagnosticInformationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic information bad request response has a 4xx status code
func (o *GetDiagnosticInformationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic information bad request response has a 5xx status code
func (o *GetDiagnosticInformationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic information bad request response a status code equal to that given
func (o *GetDiagnosticInformationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get diagnostic information bad request response
func (o *GetDiagnosticInformationBadRequest) Code() int {
	return 400
}

func (o *GetDiagnosticInformationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationBadRequest %s", 400, payload)
}

func (o *GetDiagnosticInformationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationBadRequest %s", 400, payload)
}

func (o *GetDiagnosticInformationBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *GetDiagnosticInformationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticInformationUnauthorized creates a GetDiagnosticInformationUnauthorized with default headers values
func NewGetDiagnosticInformationUnauthorized() *GetDiagnosticInformationUnauthorized {
	return &GetDiagnosticInformationUnauthorized{}
}

/*
GetDiagnosticInformationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDiagnosticInformationUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get diagnostic information unauthorized response has a 2xx status code
func (o *GetDiagnosticInformationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic information unauthorized response has a 3xx status code
func (o *GetDiagnosticInformationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic information unauthorized response has a 4xx status code
func (o *GetDiagnosticInformationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic information unauthorized response has a 5xx status code
func (o *GetDiagnosticInformationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic information unauthorized response a status code equal to that given
func (o *GetDiagnosticInformationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get diagnostic information unauthorized response
func (o *GetDiagnosticInformationUnauthorized) Code() int {
	return 401
}

func (o *GetDiagnosticInformationUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticInformationUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticInformationUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetDiagnosticInformationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticInformationForbidden creates a GetDiagnosticInformationForbidden with default headers values
func NewGetDiagnosticInformationForbidden() *GetDiagnosticInformationForbidden {
	return &GetDiagnosticInformationForbidden{}
}

/*
GetDiagnosticInformationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDiagnosticInformationForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get diagnostic information forbidden response has a 2xx status code
func (o *GetDiagnosticInformationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic information forbidden response has a 3xx status code
func (o *GetDiagnosticInformationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic information forbidden response has a 4xx status code
func (o *GetDiagnosticInformationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic information forbidden response has a 5xx status code
func (o *GetDiagnosticInformationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic information forbidden response a status code equal to that given
func (o *GetDiagnosticInformationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get diagnostic information forbidden response
func (o *GetDiagnosticInformationForbidden) Code() int {
	return 403
}

func (o *GetDiagnosticInformationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationForbidden %s", 403, payload)
}

func (o *GetDiagnosticInformationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] getDiagnosticInformationForbidden %s", 403, payload)
}

func (o *GetDiagnosticInformationForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetDiagnosticInformationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticInformationDefault creates a GetDiagnosticInformationDefault with default headers values
func NewGetDiagnosticInformationDefault(code int) *GetDiagnosticInformationDefault {
	return &GetDiagnosticInformationDefault{
		_statusCode: code,
	}
}

/*
GetDiagnosticInformationDefault describes a response with status code -1, with default header values.

unexpected error
*/
type GetDiagnosticInformationDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get diagnostic information default response has a 2xx status code
func (o *GetDiagnosticInformationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get diagnostic information default response has a 3xx status code
func (o *GetDiagnosticInformationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get diagnostic information default response has a 4xx status code
func (o *GetDiagnosticInformationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get diagnostic information default response has a 5xx status code
func (o *GetDiagnosticInformationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get diagnostic information default response a status code equal to that given
func (o *GetDiagnosticInformationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get diagnostic information default response
func (o *GetDiagnosticInformationDefault) Code() int {
	return o._statusCode
}

func (o *GetDiagnosticInformationDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] GetDiagnosticInformation default %s", o._statusCode, payload)
}

func (o *GetDiagnosticInformationDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticInformation][%d] GetDiagnosticInformation default %s", o._statusCode, payload)
}

func (o *GetDiagnosticInformationDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDiagnosticInformationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
