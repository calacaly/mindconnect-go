// Code generated by go-swagger; DO NOT EDIT.

package event_mappings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// DeleteEventMappingsIDReader is a Reader for the DeleteEventMappingsID structure.
type DeleteEventMappingsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEventMappingsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEventMappingsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteEventMappingsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteEventMappingsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteEventMappingsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEventMappingsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteEventMappingsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteEventMappingsIDNoContent creates a DeleteEventMappingsIDNoContent with default headers values
func NewDeleteEventMappingsIDNoContent() *DeleteEventMappingsIDNoContent {
	return &DeleteEventMappingsIDNoContent{}
}

/*
DeleteEventMappingsIDNoContent describes a response with status code 204, with default header values.

Deleted
*/
type DeleteEventMappingsIDNoContent struct {
}

// IsSuccess returns true when this delete event mappings Id no content response has a 2xx status code
func (o *DeleteEventMappingsIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete event mappings Id no content response has a 3xx status code
func (o *DeleteEventMappingsIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete event mappings Id no content response has a 4xx status code
func (o *DeleteEventMappingsIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete event mappings Id no content response has a 5xx status code
func (o *DeleteEventMappingsIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete event mappings Id no content response a status code equal to that given
func (o *DeleteEventMappingsIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete event mappings Id no content response
func (o *DeleteEventMappingsIDNoContent) Code() int {
	return 204
}

func (o *DeleteEventMappingsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdNoContent", 204)
}

func (o *DeleteEventMappingsIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdNoContent", 204)
}

func (o *DeleteEventMappingsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEventMappingsIDBadRequest creates a DeleteEventMappingsIDBadRequest with default headers values
func NewDeleteEventMappingsIDBadRequest() *DeleteEventMappingsIDBadRequest {
	return &DeleteEventMappingsIDBadRequest{}
}

/*
DeleteEventMappingsIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteEventMappingsIDBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete event mappings Id bad request response has a 2xx status code
func (o *DeleteEventMappingsIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete event mappings Id bad request response has a 3xx status code
func (o *DeleteEventMappingsIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete event mappings Id bad request response has a 4xx status code
func (o *DeleteEventMappingsIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete event mappings Id bad request response has a 5xx status code
func (o *DeleteEventMappingsIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete event mappings Id bad request response a status code equal to that given
func (o *DeleteEventMappingsIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete event mappings Id bad request response
func (o *DeleteEventMappingsIDBadRequest) Code() int {
	return 400
}

func (o *DeleteEventMappingsIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdBadRequest %s", 400, payload)
}

func (o *DeleteEventMappingsIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdBadRequest %s", 400, payload)
}

func (o *DeleteEventMappingsIDBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteEventMappingsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEventMappingsIDUnauthorized creates a DeleteEventMappingsIDUnauthorized with default headers values
func NewDeleteEventMappingsIDUnauthorized() *DeleteEventMappingsIDUnauthorized {
	return &DeleteEventMappingsIDUnauthorized{}
}

/*
DeleteEventMappingsIDUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DeleteEventMappingsIDUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete event mappings Id unauthorized response has a 2xx status code
func (o *DeleteEventMappingsIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete event mappings Id unauthorized response has a 3xx status code
func (o *DeleteEventMappingsIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete event mappings Id unauthorized response has a 4xx status code
func (o *DeleteEventMappingsIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete event mappings Id unauthorized response has a 5xx status code
func (o *DeleteEventMappingsIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete event mappings Id unauthorized response a status code equal to that given
func (o *DeleteEventMappingsIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete event mappings Id unauthorized response
func (o *DeleteEventMappingsIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteEventMappingsIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdUnauthorized %s", 401, payload)
}

func (o *DeleteEventMappingsIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdUnauthorized %s", 401, payload)
}

func (o *DeleteEventMappingsIDUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteEventMappingsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEventMappingsIDForbidden creates a DeleteEventMappingsIDForbidden with default headers values
func NewDeleteEventMappingsIDForbidden() *DeleteEventMappingsIDForbidden {
	return &DeleteEventMappingsIDForbidden{}
}

/*
DeleteEventMappingsIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteEventMappingsIDForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete event mappings Id forbidden response has a 2xx status code
func (o *DeleteEventMappingsIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete event mappings Id forbidden response has a 3xx status code
func (o *DeleteEventMappingsIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete event mappings Id forbidden response has a 4xx status code
func (o *DeleteEventMappingsIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete event mappings Id forbidden response has a 5xx status code
func (o *DeleteEventMappingsIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete event mappings Id forbidden response a status code equal to that given
func (o *DeleteEventMappingsIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete event mappings Id forbidden response
func (o *DeleteEventMappingsIDForbidden) Code() int {
	return 403
}

func (o *DeleteEventMappingsIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdForbidden %s", 403, payload)
}

func (o *DeleteEventMappingsIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdForbidden %s", 403, payload)
}

func (o *DeleteEventMappingsIDForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteEventMappingsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEventMappingsIDNotFound creates a DeleteEventMappingsIDNotFound with default headers values
func NewDeleteEventMappingsIDNotFound() *DeleteEventMappingsIDNotFound {
	return &DeleteEventMappingsIDNotFound{}
}

/*
DeleteEventMappingsIDNotFound describes a response with status code 404, with default header values.

Mapping not found
*/
type DeleteEventMappingsIDNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete event mappings Id not found response has a 2xx status code
func (o *DeleteEventMappingsIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete event mappings Id not found response has a 3xx status code
func (o *DeleteEventMappingsIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete event mappings Id not found response has a 4xx status code
func (o *DeleteEventMappingsIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete event mappings Id not found response has a 5xx status code
func (o *DeleteEventMappingsIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete event mappings Id not found response a status code equal to that given
func (o *DeleteEventMappingsIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete event mappings Id not found response
func (o *DeleteEventMappingsIDNotFound) Code() int {
	return 404
}

func (o *DeleteEventMappingsIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdNotFound %s", 404, payload)
}

func (o *DeleteEventMappingsIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] deleteEventMappingsIdNotFound %s", 404, payload)
}

func (o *DeleteEventMappingsIDNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteEventMappingsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEventMappingsIDDefault creates a DeleteEventMappingsIDDefault with default headers values
func NewDeleteEventMappingsIDDefault(code int) *DeleteEventMappingsIDDefault {
	return &DeleteEventMappingsIDDefault{
		_statusCode: code,
	}
}

/*
DeleteEventMappingsIDDefault describes a response with status code -1, with default header values.

unexpected error
*/
type DeleteEventMappingsIDDefault struct {
	_statusCode int

	Payload *models.Errors
}

// IsSuccess returns true when this delete event mappings ID default response has a 2xx status code
func (o *DeleteEventMappingsIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete event mappings ID default response has a 3xx status code
func (o *DeleteEventMappingsIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete event mappings ID default response has a 4xx status code
func (o *DeleteEventMappingsIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete event mappings ID default response has a 5xx status code
func (o *DeleteEventMappingsIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete event mappings ID default response a status code equal to that given
func (o *DeleteEventMappingsIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete event mappings ID default response
func (o *DeleteEventMappingsIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteEventMappingsIDDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] DeleteEventMappingsID default %s", o._statusCode, payload)
}

func (o *DeleteEventMappingsIDDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /eventMappings/{id}][%d] DeleteEventMappingsID default %s", o._statusCode, payload)
}

func (o *DeleteEventMappingsIDDefault) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteEventMappingsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
