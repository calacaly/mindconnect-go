// Code generated by go-swagger; DO NOT EDIT.

package event_mappings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// PostEventMappingsReader is a Reader for the PostEventMappings structure.
type PostEventMappingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEventMappingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostEventMappingsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostEventMappingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostEventMappingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostEventMappingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostEventMappingsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostEventMappingsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostEventMappingsCreated creates a PostEventMappingsCreated with default headers values
func NewPostEventMappingsCreated() *PostEventMappingsCreated {
	return &PostEventMappingsCreated{}
}

/*
PostEventMappingsCreated describes a response with status code 201, with default header values.

Created
*/
type PostEventMappingsCreated struct {
	Payload *models.EventMappingOptional
}

// IsSuccess returns true when this post event mappings created response has a 2xx status code
func (o *PostEventMappingsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post event mappings created response has a 3xx status code
func (o *PostEventMappingsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post event mappings created response has a 4xx status code
func (o *PostEventMappingsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post event mappings created response has a 5xx status code
func (o *PostEventMappingsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post event mappings created response a status code equal to that given
func (o *PostEventMappingsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post event mappings created response
func (o *PostEventMappingsCreated) Code() int {
	return 201
}

func (o *PostEventMappingsCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsCreated %s", 201, payload)
}

func (o *PostEventMappingsCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsCreated %s", 201, payload)
}

func (o *PostEventMappingsCreated) GetPayload() *models.EventMappingOptional {
	return o.Payload
}

func (o *PostEventMappingsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EventMappingOptional)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEventMappingsBadRequest creates a PostEventMappingsBadRequest with default headers values
func NewPostEventMappingsBadRequest() *PostEventMappingsBadRequest {
	return &PostEventMappingsBadRequest{}
}

/*
PostEventMappingsBadRequest describes a response with status code 400, with default header values.

Bad Request. Request validations failed.
*/
type PostEventMappingsBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this post event mappings bad request response has a 2xx status code
func (o *PostEventMappingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post event mappings bad request response has a 3xx status code
func (o *PostEventMappingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post event mappings bad request response has a 4xx status code
func (o *PostEventMappingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post event mappings bad request response has a 5xx status code
func (o *PostEventMappingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post event mappings bad request response a status code equal to that given
func (o *PostEventMappingsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post event mappings bad request response
func (o *PostEventMappingsBadRequest) Code() int {
	return 400
}

func (o *PostEventMappingsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsBadRequest %s", 400, payload)
}

func (o *PostEventMappingsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsBadRequest %s", 400, payload)
}

func (o *PostEventMappingsBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *PostEventMappingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEventMappingsUnauthorized creates a PostEventMappingsUnauthorized with default headers values
func NewPostEventMappingsUnauthorized() *PostEventMappingsUnauthorized {
	return &PostEventMappingsUnauthorized{}
}

/*
PostEventMappingsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostEventMappingsUnauthorized struct {
	Payload *models.Errors
}

// IsSuccess returns true when this post event mappings unauthorized response has a 2xx status code
func (o *PostEventMappingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post event mappings unauthorized response has a 3xx status code
func (o *PostEventMappingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post event mappings unauthorized response has a 4xx status code
func (o *PostEventMappingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post event mappings unauthorized response has a 5xx status code
func (o *PostEventMappingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post event mappings unauthorized response a status code equal to that given
func (o *PostEventMappingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post event mappings unauthorized response
func (o *PostEventMappingsUnauthorized) Code() int {
	return 401
}

func (o *PostEventMappingsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsUnauthorized %s", 401, payload)
}

func (o *PostEventMappingsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsUnauthorized %s", 401, payload)
}

func (o *PostEventMappingsUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *PostEventMappingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEventMappingsForbidden creates a PostEventMappingsForbidden with default headers values
func NewPostEventMappingsForbidden() *PostEventMappingsForbidden {
	return &PostEventMappingsForbidden{}
}

/*
PostEventMappingsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostEventMappingsForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this post event mappings forbidden response has a 2xx status code
func (o *PostEventMappingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post event mappings forbidden response has a 3xx status code
func (o *PostEventMappingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post event mappings forbidden response has a 4xx status code
func (o *PostEventMappingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post event mappings forbidden response has a 5xx status code
func (o *PostEventMappingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post event mappings forbidden response a status code equal to that given
func (o *PostEventMappingsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post event mappings forbidden response
func (o *PostEventMappingsForbidden) Code() int {
	return 403
}

func (o *PostEventMappingsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsForbidden %s", 403, payload)
}

func (o *PostEventMappingsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsForbidden %s", 403, payload)
}

func (o *PostEventMappingsForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *PostEventMappingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEventMappingsConflict creates a PostEventMappingsConflict with default headers values
func NewPostEventMappingsConflict() *PostEventMappingsConflict {
	return &PostEventMappingsConflict{}
}

/*
PostEventMappingsConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostEventMappingsConflict struct {
	Payload *models.Errors
}

// IsSuccess returns true when this post event mappings conflict response has a 2xx status code
func (o *PostEventMappingsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post event mappings conflict response has a 3xx status code
func (o *PostEventMappingsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post event mappings conflict response has a 4xx status code
func (o *PostEventMappingsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post event mappings conflict response has a 5xx status code
func (o *PostEventMappingsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post event mappings conflict response a status code equal to that given
func (o *PostEventMappingsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post event mappings conflict response
func (o *PostEventMappingsConflict) Code() int {
	return 409
}

func (o *PostEventMappingsConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsConflict %s", 409, payload)
}

func (o *PostEventMappingsConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] postEventMappingsConflict %s", 409, payload)
}

func (o *PostEventMappingsConflict) GetPayload() *models.Errors {
	return o.Payload
}

func (o *PostEventMappingsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEventMappingsDefault creates a PostEventMappingsDefault with default headers values
func NewPostEventMappingsDefault(code int) *PostEventMappingsDefault {
	return &PostEventMappingsDefault{
		_statusCode: code,
	}
}

/*
PostEventMappingsDefault describes a response with status code -1, with default header values.

unexpected error
*/
type PostEventMappingsDefault struct {
	_statusCode int

	Payload *models.Errors
}

// IsSuccess returns true when this post event mappings default response has a 2xx status code
func (o *PostEventMappingsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post event mappings default response has a 3xx status code
func (o *PostEventMappingsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post event mappings default response has a 4xx status code
func (o *PostEventMappingsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post event mappings default response has a 5xx status code
func (o *PostEventMappingsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post event mappings default response a status code equal to that given
func (o *PostEventMappingsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post event mappings default response
func (o *PostEventMappingsDefault) Code() int {
	return o._statusCode
}

func (o *PostEventMappingsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] PostEventMappings default %s", o._statusCode, payload)
}

func (o *PostEventMappingsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /eventMappings][%d] PostEventMappings default %s", o._statusCode, payload)
}

func (o *PostEventMappingsDefault) GetPayload() *models.Errors {
	return o.Payload
}

func (o *PostEventMappingsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
