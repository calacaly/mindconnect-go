// Code generated by go-swagger; DO NOT EDIT.

package record_recovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// GetRecoverableRecordsIDDownloadLinkReader is a Reader for the GetRecoverableRecordsIDDownloadLink structure.
type GetRecoverableRecordsIDDownloadLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecoverableRecordsIDDownloadLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecoverableRecordsIDDownloadLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRecoverableRecordsIDDownloadLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRecoverableRecordsIDDownloadLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRecoverableRecordsIDDownloadLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRecoverableRecordsIDDownloadLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetRecoverableRecordsIDDownloadLinkDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRecoverableRecordsIDDownloadLinkOK creates a GetRecoverableRecordsIDDownloadLinkOK with default headers values
func NewGetRecoverableRecordsIDDownloadLinkOK() *GetRecoverableRecordsIDDownloadLinkOK {
	return &GetRecoverableRecordsIDDownloadLinkOK{}
}

/*
GetRecoverableRecordsIDDownloadLinkOK describes a response with status code 200, with default header values.

OK
*/
type GetRecoverableRecordsIDDownloadLinkOK struct {
	Payload strfmt.URI
}

// IsSuccess returns true when this get recoverable records Id download link o k response has a 2xx status code
func (o *GetRecoverableRecordsIDDownloadLinkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get recoverable records Id download link o k response has a 3xx status code
func (o *GetRecoverableRecordsIDDownloadLinkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recoverable records Id download link o k response has a 4xx status code
func (o *GetRecoverableRecordsIDDownloadLinkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get recoverable records Id download link o k response has a 5xx status code
func (o *GetRecoverableRecordsIDDownloadLinkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get recoverable records Id download link o k response a status code equal to that given
func (o *GetRecoverableRecordsIDDownloadLinkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get recoverable records Id download link o k response
func (o *GetRecoverableRecordsIDDownloadLinkOK) Code() int {
	return 200
}

func (o *GetRecoverableRecordsIDDownloadLinkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkOK %s", 200, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkOK %s", 200, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkOK) GetPayload() strfmt.URI {
	return o.Payload
}

func (o *GetRecoverableRecordsIDDownloadLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecoverableRecordsIDDownloadLinkBadRequest creates a GetRecoverableRecordsIDDownloadLinkBadRequest with default headers values
func NewGetRecoverableRecordsIDDownloadLinkBadRequest() *GetRecoverableRecordsIDDownloadLinkBadRequest {
	return &GetRecoverableRecordsIDDownloadLinkBadRequest{}
}

/*
GetRecoverableRecordsIDDownloadLinkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRecoverableRecordsIDDownloadLinkBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this get recoverable records Id download link bad request response has a 2xx status code
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recoverable records Id download link bad request response has a 3xx status code
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recoverable records Id download link bad request response has a 4xx status code
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recoverable records Id download link bad request response has a 5xx status code
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get recoverable records Id download link bad request response a status code equal to that given
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get recoverable records Id download link bad request response
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) Code() int {
	return 400
}

func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkBadRequest %s", 400, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkBadRequest %s", 400, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecoverableRecordsIDDownloadLinkUnauthorized creates a GetRecoverableRecordsIDDownloadLinkUnauthorized with default headers values
func NewGetRecoverableRecordsIDDownloadLinkUnauthorized() *GetRecoverableRecordsIDDownloadLinkUnauthorized {
	return &GetRecoverableRecordsIDDownloadLinkUnauthorized{}
}

/*
GetRecoverableRecordsIDDownloadLinkUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRecoverableRecordsIDDownloadLinkUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get recoverable records Id download link unauthorized response has a 2xx status code
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recoverable records Id download link unauthorized response has a 3xx status code
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recoverable records Id download link unauthorized response has a 4xx status code
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recoverable records Id download link unauthorized response has a 5xx status code
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get recoverable records Id download link unauthorized response a status code equal to that given
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get recoverable records Id download link unauthorized response
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) Code() int {
	return 401
}

func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkUnauthorized %s", 401, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkUnauthorized %s", 401, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecoverableRecordsIDDownloadLinkForbidden creates a GetRecoverableRecordsIDDownloadLinkForbidden with default headers values
func NewGetRecoverableRecordsIDDownloadLinkForbidden() *GetRecoverableRecordsIDDownloadLinkForbidden {
	return &GetRecoverableRecordsIDDownloadLinkForbidden{}
}

/*
GetRecoverableRecordsIDDownloadLinkForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRecoverableRecordsIDDownloadLinkForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get recoverable records Id download link forbidden response has a 2xx status code
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recoverable records Id download link forbidden response has a 3xx status code
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recoverable records Id download link forbidden response has a 4xx status code
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recoverable records Id download link forbidden response has a 5xx status code
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get recoverable records Id download link forbidden response a status code equal to that given
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get recoverable records Id download link forbidden response
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) Code() int {
	return 403
}

func (o *GetRecoverableRecordsIDDownloadLinkForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkForbidden %s", 403, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkForbidden %s", 403, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetRecoverableRecordsIDDownloadLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecoverableRecordsIDDownloadLinkNotFound creates a GetRecoverableRecordsIDDownloadLinkNotFound with default headers values
func NewGetRecoverableRecordsIDDownloadLinkNotFound() *GetRecoverableRecordsIDDownloadLinkNotFound {
	return &GetRecoverableRecordsIDDownloadLinkNotFound{}
}

/*
GetRecoverableRecordsIDDownloadLinkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRecoverableRecordsIDDownloadLinkNotFound struct {
	Payload *models.Notfound
}

// IsSuccess returns true when this get recoverable records Id download link not found response has a 2xx status code
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get recoverable records Id download link not found response has a 3xx status code
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get recoverable records Id download link not found response has a 4xx status code
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get recoverable records Id download link not found response has a 5xx status code
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get recoverable records Id download link not found response a status code equal to that given
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get recoverable records Id download link not found response
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) Code() int {
	return 404
}

func (o *GetRecoverableRecordsIDDownloadLinkNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkNotFound %s", 404, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] getRecoverableRecordsIdDownloadLinkNotFound %s", 404, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkNotFound) GetPayload() *models.Notfound {
	return o.Payload
}

func (o *GetRecoverableRecordsIDDownloadLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notfound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecoverableRecordsIDDownloadLinkDefault creates a GetRecoverableRecordsIDDownloadLinkDefault with default headers values
func NewGetRecoverableRecordsIDDownloadLinkDefault(code int) *GetRecoverableRecordsIDDownloadLinkDefault {
	return &GetRecoverableRecordsIDDownloadLinkDefault{
		_statusCode: code,
	}
}

/*
GetRecoverableRecordsIDDownloadLinkDefault describes a response with status code -1, with default header values.

unexpected error
*/
type GetRecoverableRecordsIDDownloadLinkDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get recoverable records ID download link default response has a 2xx status code
func (o *GetRecoverableRecordsIDDownloadLinkDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get recoverable records ID download link default response has a 3xx status code
func (o *GetRecoverableRecordsIDDownloadLinkDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get recoverable records ID download link default response has a 4xx status code
func (o *GetRecoverableRecordsIDDownloadLinkDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get recoverable records ID download link default response has a 5xx status code
func (o *GetRecoverableRecordsIDDownloadLinkDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get recoverable records ID download link default response a status code equal to that given
func (o *GetRecoverableRecordsIDDownloadLinkDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get recoverable records ID download link default response
func (o *GetRecoverableRecordsIDDownloadLinkDefault) Code() int {
	return o._statusCode
}

func (o *GetRecoverableRecordsIDDownloadLinkDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] GetRecoverableRecordsIDDownloadLink default %s", o._statusCode, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /recoverableRecords/{id}/downloadLink][%d] GetRecoverableRecordsIDDownloadLink default %s", o._statusCode, payload)
}

func (o *GetRecoverableRecordsIDDownloadLinkDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRecoverableRecordsIDDownloadLinkDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
