// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// GetDiagnosticActivationsIDReader is a Reader for the GetDiagnosticActivationsID structure.
type GetDiagnosticActivationsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiagnosticActivationsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDiagnosticActivationsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDiagnosticActivationsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDiagnosticActivationsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDiagnosticActivationsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDiagnosticActivationsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetDiagnosticActivationsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDiagnosticActivationsIDOK creates a GetDiagnosticActivationsIDOK with default headers values
func NewGetDiagnosticActivationsIDOK() *GetDiagnosticActivationsIDOK {
	return &GetDiagnosticActivationsIDOK{}
}

/*
GetDiagnosticActivationsIDOK describes a response with status code 200, with default header values.

OK
*/
type GetDiagnosticActivationsIDOK struct {
	Payload *models.DiagnosticActivation
}

// IsSuccess returns true when this get diagnostic activations Id o k response has a 2xx status code
func (o *GetDiagnosticActivationsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get diagnostic activations Id o k response has a 3xx status code
func (o *GetDiagnosticActivationsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id o k response has a 4xx status code
func (o *GetDiagnosticActivationsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get diagnostic activations Id o k response has a 5xx status code
func (o *GetDiagnosticActivationsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id o k response a status code equal to that given
func (o *GetDiagnosticActivationsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get diagnostic activations Id o k response
func (o *GetDiagnosticActivationsIDOK) Code() int {
	return 200
}

func (o *GetDiagnosticActivationsIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdOK %s", 200, payload)
}

func (o *GetDiagnosticActivationsIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdOK %s", 200, payload)
}

func (o *GetDiagnosticActivationsIDOK) GetPayload() *models.DiagnosticActivation {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DiagnosticActivation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDBadRequest creates a GetDiagnosticActivationsIDBadRequest with default headers values
func NewGetDiagnosticActivationsIDBadRequest() *GetDiagnosticActivationsIDBadRequest {
	return &GetDiagnosticActivationsIDBadRequest{}
}

/*
GetDiagnosticActivationsIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDiagnosticActivationsIDBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this get diagnostic activations Id bad request response has a 2xx status code
func (o *GetDiagnosticActivationsIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id bad request response has a 3xx status code
func (o *GetDiagnosticActivationsIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id bad request response has a 4xx status code
func (o *GetDiagnosticActivationsIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id bad request response has a 5xx status code
func (o *GetDiagnosticActivationsIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id bad request response a status code equal to that given
func (o *GetDiagnosticActivationsIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get diagnostic activations Id bad request response
func (o *GetDiagnosticActivationsIDBadRequest) Code() int {
	return 400
}

func (o *GetDiagnosticActivationsIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdBadRequest %s", 400, payload)
}

func (o *GetDiagnosticActivationsIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdBadRequest %s", 400, payload)
}

func (o *GetDiagnosticActivationsIDBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDUnauthorized creates a GetDiagnosticActivationsIDUnauthorized with default headers values
func NewGetDiagnosticActivationsIDUnauthorized() *GetDiagnosticActivationsIDUnauthorized {
	return &GetDiagnosticActivationsIDUnauthorized{}
}

/*
GetDiagnosticActivationsIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDiagnosticActivationsIDUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get diagnostic activations Id unauthorized response has a 2xx status code
func (o *GetDiagnosticActivationsIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id unauthorized response has a 3xx status code
func (o *GetDiagnosticActivationsIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id unauthorized response has a 4xx status code
func (o *GetDiagnosticActivationsIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id unauthorized response has a 5xx status code
func (o *GetDiagnosticActivationsIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id unauthorized response a status code equal to that given
func (o *GetDiagnosticActivationsIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get diagnostic activations Id unauthorized response
func (o *GetDiagnosticActivationsIDUnauthorized) Code() int {
	return 401
}

func (o *GetDiagnosticActivationsIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticActivationsIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticActivationsIDUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDForbidden creates a GetDiagnosticActivationsIDForbidden with default headers values
func NewGetDiagnosticActivationsIDForbidden() *GetDiagnosticActivationsIDForbidden {
	return &GetDiagnosticActivationsIDForbidden{}
}

/*
GetDiagnosticActivationsIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDiagnosticActivationsIDForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get diagnostic activations Id forbidden response has a 2xx status code
func (o *GetDiagnosticActivationsIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id forbidden response has a 3xx status code
func (o *GetDiagnosticActivationsIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id forbidden response has a 4xx status code
func (o *GetDiagnosticActivationsIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id forbidden response has a 5xx status code
func (o *GetDiagnosticActivationsIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id forbidden response a status code equal to that given
func (o *GetDiagnosticActivationsIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get diagnostic activations Id forbidden response
func (o *GetDiagnosticActivationsIDForbidden) Code() int {
	return 403
}

func (o *GetDiagnosticActivationsIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdForbidden %s", 403, payload)
}

func (o *GetDiagnosticActivationsIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdForbidden %s", 403, payload)
}

func (o *GetDiagnosticActivationsIDForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDNotFound creates a GetDiagnosticActivationsIDNotFound with default headers values
func NewGetDiagnosticActivationsIDNotFound() *GetDiagnosticActivationsIDNotFound {
	return &GetDiagnosticActivationsIDNotFound{}
}

/*
GetDiagnosticActivationsIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDiagnosticActivationsIDNotFound struct {
	Payload *models.Notfound
}

// IsSuccess returns true when this get diagnostic activations Id not found response has a 2xx status code
func (o *GetDiagnosticActivationsIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id not found response has a 3xx status code
func (o *GetDiagnosticActivationsIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id not found response has a 4xx status code
func (o *GetDiagnosticActivationsIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id not found response has a 5xx status code
func (o *GetDiagnosticActivationsIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id not found response a status code equal to that given
func (o *GetDiagnosticActivationsIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get diagnostic activations Id not found response
func (o *GetDiagnosticActivationsIDNotFound) Code() int {
	return 404
}

func (o *GetDiagnosticActivationsIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdNotFound %s", 404, payload)
}

func (o *GetDiagnosticActivationsIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] getDiagnosticActivationsIdNotFound %s", 404, payload)
}

func (o *GetDiagnosticActivationsIDNotFound) GetPayload() *models.Notfound {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notfound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDDefault creates a GetDiagnosticActivationsIDDefault with default headers values
func NewGetDiagnosticActivationsIDDefault(code int) *GetDiagnosticActivationsIDDefault {
	return &GetDiagnosticActivationsIDDefault{
		_statusCode: code,
	}
}

/*
GetDiagnosticActivationsIDDefault describes a response with status code -1, with default header values.

unexpected error
*/
type GetDiagnosticActivationsIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get diagnostic activations ID default response has a 2xx status code
func (o *GetDiagnosticActivationsIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get diagnostic activations ID default response has a 3xx status code
func (o *GetDiagnosticActivationsIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get diagnostic activations ID default response has a 4xx status code
func (o *GetDiagnosticActivationsIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get diagnostic activations ID default response has a 5xx status code
func (o *GetDiagnosticActivationsIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get diagnostic activations ID default response a status code equal to that given
func (o *GetDiagnosticActivationsIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get diagnostic activations ID default response
func (o *GetDiagnosticActivationsIDDefault) Code() int {
	return o._statusCode
}

func (o *GetDiagnosticActivationsIDDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] GetDiagnosticActivationsID default %s", o._statusCode, payload)
}

func (o *GetDiagnosticActivationsIDDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}][%d] GetDiagnosticActivationsID default %s", o._statusCode, payload)
}

func (o *GetDiagnosticActivationsIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
