// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// PostDiagnosticActivationsReader is a Reader for the PostDiagnosticActivations structure.
type PostDiagnosticActivationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDiagnosticActivationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostDiagnosticActivationsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDiagnosticActivationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDiagnosticActivationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDiagnosticActivationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostDiagnosticActivationsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostDiagnosticActivationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostDiagnosticActivationsCreated creates a PostDiagnosticActivationsCreated with default headers values
func NewPostDiagnosticActivationsCreated() *PostDiagnosticActivationsCreated {
	return &PostDiagnosticActivationsCreated{}
}

/*
PostDiagnosticActivationsCreated describes a response with status code 201, with default header values.

Created
*/
type PostDiagnosticActivationsCreated struct {
	Payload *models.DiagnosticActivation
}

// IsSuccess returns true when this post diagnostic activations created response has a 2xx status code
func (o *PostDiagnosticActivationsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post diagnostic activations created response has a 3xx status code
func (o *PostDiagnosticActivationsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post diagnostic activations created response has a 4xx status code
func (o *PostDiagnosticActivationsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post diagnostic activations created response has a 5xx status code
func (o *PostDiagnosticActivationsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post diagnostic activations created response a status code equal to that given
func (o *PostDiagnosticActivationsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post diagnostic activations created response
func (o *PostDiagnosticActivationsCreated) Code() int {
	return 201
}

func (o *PostDiagnosticActivationsCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsCreated %s", 201, payload)
}

func (o *PostDiagnosticActivationsCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsCreated %s", 201, payload)
}

func (o *PostDiagnosticActivationsCreated) GetPayload() *models.DiagnosticActivation {
	return o.Payload
}

func (o *PostDiagnosticActivationsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DiagnosticActivation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDiagnosticActivationsBadRequest creates a PostDiagnosticActivationsBadRequest with default headers values
func NewPostDiagnosticActivationsBadRequest() *PostDiagnosticActivationsBadRequest {
	return &PostDiagnosticActivationsBadRequest{}
}

/*
PostDiagnosticActivationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDiagnosticActivationsBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this post diagnostic activations bad request response has a 2xx status code
func (o *PostDiagnosticActivationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post diagnostic activations bad request response has a 3xx status code
func (o *PostDiagnosticActivationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post diagnostic activations bad request response has a 4xx status code
func (o *PostDiagnosticActivationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post diagnostic activations bad request response has a 5xx status code
func (o *PostDiagnosticActivationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post diagnostic activations bad request response a status code equal to that given
func (o *PostDiagnosticActivationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post diagnostic activations bad request response
func (o *PostDiagnosticActivationsBadRequest) Code() int {
	return 400
}

func (o *PostDiagnosticActivationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsBadRequest %s", 400, payload)
}

func (o *PostDiagnosticActivationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsBadRequest %s", 400, payload)
}

func (o *PostDiagnosticActivationsBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *PostDiagnosticActivationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDiagnosticActivationsUnauthorized creates a PostDiagnosticActivationsUnauthorized with default headers values
func NewPostDiagnosticActivationsUnauthorized() *PostDiagnosticActivationsUnauthorized {
	return &PostDiagnosticActivationsUnauthorized{}
}

/*
PostDiagnosticActivationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDiagnosticActivationsUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this post diagnostic activations unauthorized response has a 2xx status code
func (o *PostDiagnosticActivationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post diagnostic activations unauthorized response has a 3xx status code
func (o *PostDiagnosticActivationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post diagnostic activations unauthorized response has a 4xx status code
func (o *PostDiagnosticActivationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post diagnostic activations unauthorized response has a 5xx status code
func (o *PostDiagnosticActivationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post diagnostic activations unauthorized response a status code equal to that given
func (o *PostDiagnosticActivationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post diagnostic activations unauthorized response
func (o *PostDiagnosticActivationsUnauthorized) Code() int {
	return 401
}

func (o *PostDiagnosticActivationsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsUnauthorized %s", 401, payload)
}

func (o *PostDiagnosticActivationsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsUnauthorized %s", 401, payload)
}

func (o *PostDiagnosticActivationsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *PostDiagnosticActivationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDiagnosticActivationsForbidden creates a PostDiagnosticActivationsForbidden with default headers values
func NewPostDiagnosticActivationsForbidden() *PostDiagnosticActivationsForbidden {
	return &PostDiagnosticActivationsForbidden{}
}

/*
PostDiagnosticActivationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostDiagnosticActivationsForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this post diagnostic activations forbidden response has a 2xx status code
func (o *PostDiagnosticActivationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post diagnostic activations forbidden response has a 3xx status code
func (o *PostDiagnosticActivationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post diagnostic activations forbidden response has a 4xx status code
func (o *PostDiagnosticActivationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post diagnostic activations forbidden response has a 5xx status code
func (o *PostDiagnosticActivationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post diagnostic activations forbidden response a status code equal to that given
func (o *PostDiagnosticActivationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post diagnostic activations forbidden response
func (o *PostDiagnosticActivationsForbidden) Code() int {
	return 403
}

func (o *PostDiagnosticActivationsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsForbidden %s", 403, payload)
}

func (o *PostDiagnosticActivationsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsForbidden %s", 403, payload)
}

func (o *PostDiagnosticActivationsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *PostDiagnosticActivationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDiagnosticActivationsConflict creates a PostDiagnosticActivationsConflict with default headers values
func NewPostDiagnosticActivationsConflict() *PostDiagnosticActivationsConflict {
	return &PostDiagnosticActivationsConflict{}
}

/*
PostDiagnosticActivationsConflict describes a response with status code 409, with default header values.

Resource is already available.
*/
type PostDiagnosticActivationsConflict struct {
	Payload *models.Conflict
}

// IsSuccess returns true when this post diagnostic activations conflict response has a 2xx status code
func (o *PostDiagnosticActivationsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post diagnostic activations conflict response has a 3xx status code
func (o *PostDiagnosticActivationsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post diagnostic activations conflict response has a 4xx status code
func (o *PostDiagnosticActivationsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post diagnostic activations conflict response has a 5xx status code
func (o *PostDiagnosticActivationsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post diagnostic activations conflict response a status code equal to that given
func (o *PostDiagnosticActivationsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post diagnostic activations conflict response
func (o *PostDiagnosticActivationsConflict) Code() int {
	return 409
}

func (o *PostDiagnosticActivationsConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsConflict %s", 409, payload)
}

func (o *PostDiagnosticActivationsConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] postDiagnosticActivationsConflict %s", 409, payload)
}

func (o *PostDiagnosticActivationsConflict) GetPayload() *models.Conflict {
	return o.Payload
}

func (o *PostDiagnosticActivationsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Conflict)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDiagnosticActivationsDefault creates a PostDiagnosticActivationsDefault with default headers values
func NewPostDiagnosticActivationsDefault(code int) *PostDiagnosticActivationsDefault {
	return &PostDiagnosticActivationsDefault{
		_statusCode: code,
	}
}

/*
PostDiagnosticActivationsDefault describes a response with status code -1, with default header values.

unexpected error
*/
type PostDiagnosticActivationsDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this post diagnostic activations default response has a 2xx status code
func (o *PostDiagnosticActivationsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post diagnostic activations default response has a 3xx status code
func (o *PostDiagnosticActivationsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post diagnostic activations default response has a 4xx status code
func (o *PostDiagnosticActivationsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post diagnostic activations default response has a 5xx status code
func (o *PostDiagnosticActivationsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post diagnostic activations default response a status code equal to that given
func (o *PostDiagnosticActivationsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post diagnostic activations default response
func (o *PostDiagnosticActivationsDefault) Code() int {
	return o._statusCode
}

func (o *PostDiagnosticActivationsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] PostDiagnosticActivations default %s", o._statusCode, payload)
}

func (o *PostDiagnosticActivationsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /diagnosticActivations][%d] PostDiagnosticActivations default %s", o._statusCode, payload)
}

func (o *PostDiagnosticActivationsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDiagnosticActivationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
