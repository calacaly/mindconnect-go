// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// GetDiagnosticActivationsReader is a Reader for the GetDiagnosticActivations structure.
type GetDiagnosticActivationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiagnosticActivationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDiagnosticActivationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDiagnosticActivationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDiagnosticActivationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDiagnosticActivationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetDiagnosticActivationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDiagnosticActivationsOK creates a GetDiagnosticActivationsOK with default headers values
func NewGetDiagnosticActivationsOK() *GetDiagnosticActivationsOK {
	return &GetDiagnosticActivationsOK{}
}

/*
GetDiagnosticActivationsOK describes a response with status code 200, with default header values.

OK
*/
type GetDiagnosticActivationsOK struct {
	Payload *models.PagedDiagnosticActivation
}

// IsSuccess returns true when this get diagnostic activations o k response has a 2xx status code
func (o *GetDiagnosticActivationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get diagnostic activations o k response has a 3xx status code
func (o *GetDiagnosticActivationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations o k response has a 4xx status code
func (o *GetDiagnosticActivationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get diagnostic activations o k response has a 5xx status code
func (o *GetDiagnosticActivationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations o k response a status code equal to that given
func (o *GetDiagnosticActivationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get diagnostic activations o k response
func (o *GetDiagnosticActivationsOK) Code() int {
	return 200
}

func (o *GetDiagnosticActivationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsOK %s", 200, payload)
}

func (o *GetDiagnosticActivationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsOK %s", 200, payload)
}

func (o *GetDiagnosticActivationsOK) GetPayload() *models.PagedDiagnosticActivation {
	return o.Payload
}

func (o *GetDiagnosticActivationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedDiagnosticActivation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsBadRequest creates a GetDiagnosticActivationsBadRequest with default headers values
func NewGetDiagnosticActivationsBadRequest() *GetDiagnosticActivationsBadRequest {
	return &GetDiagnosticActivationsBadRequest{}
}

/*
GetDiagnosticActivationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDiagnosticActivationsBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this get diagnostic activations bad request response has a 2xx status code
func (o *GetDiagnosticActivationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations bad request response has a 3xx status code
func (o *GetDiagnosticActivationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations bad request response has a 4xx status code
func (o *GetDiagnosticActivationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations bad request response has a 5xx status code
func (o *GetDiagnosticActivationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations bad request response a status code equal to that given
func (o *GetDiagnosticActivationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get diagnostic activations bad request response
func (o *GetDiagnosticActivationsBadRequest) Code() int {
	return 400
}

func (o *GetDiagnosticActivationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsBadRequest %s", 400, payload)
}

func (o *GetDiagnosticActivationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsBadRequest %s", 400, payload)
}

func (o *GetDiagnosticActivationsBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *GetDiagnosticActivationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsUnauthorized creates a GetDiagnosticActivationsUnauthorized with default headers values
func NewGetDiagnosticActivationsUnauthorized() *GetDiagnosticActivationsUnauthorized {
	return &GetDiagnosticActivationsUnauthorized{}
}

/*
GetDiagnosticActivationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDiagnosticActivationsUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get diagnostic activations unauthorized response has a 2xx status code
func (o *GetDiagnosticActivationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations unauthorized response has a 3xx status code
func (o *GetDiagnosticActivationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations unauthorized response has a 4xx status code
func (o *GetDiagnosticActivationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations unauthorized response has a 5xx status code
func (o *GetDiagnosticActivationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations unauthorized response a status code equal to that given
func (o *GetDiagnosticActivationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get diagnostic activations unauthorized response
func (o *GetDiagnosticActivationsUnauthorized) Code() int {
	return 401
}

func (o *GetDiagnosticActivationsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticActivationsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticActivationsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetDiagnosticActivationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsForbidden creates a GetDiagnosticActivationsForbidden with default headers values
func NewGetDiagnosticActivationsForbidden() *GetDiagnosticActivationsForbidden {
	return &GetDiagnosticActivationsForbidden{}
}

/*
GetDiagnosticActivationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDiagnosticActivationsForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get diagnostic activations forbidden response has a 2xx status code
func (o *GetDiagnosticActivationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations forbidden response has a 3xx status code
func (o *GetDiagnosticActivationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations forbidden response has a 4xx status code
func (o *GetDiagnosticActivationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations forbidden response has a 5xx status code
func (o *GetDiagnosticActivationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations forbidden response a status code equal to that given
func (o *GetDiagnosticActivationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get diagnostic activations forbidden response
func (o *GetDiagnosticActivationsForbidden) Code() int {
	return 403
}

func (o *GetDiagnosticActivationsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsForbidden %s", 403, payload)
}

func (o *GetDiagnosticActivationsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] getDiagnosticActivationsForbidden %s", 403, payload)
}

func (o *GetDiagnosticActivationsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetDiagnosticActivationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsDefault creates a GetDiagnosticActivationsDefault with default headers values
func NewGetDiagnosticActivationsDefault(code int) *GetDiagnosticActivationsDefault {
	return &GetDiagnosticActivationsDefault{
		_statusCode: code,
	}
}

/*
GetDiagnosticActivationsDefault describes a response with status code -1, with default header values.

unexpected error
*/
type GetDiagnosticActivationsDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get diagnostic activations default response has a 2xx status code
func (o *GetDiagnosticActivationsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get diagnostic activations default response has a 3xx status code
func (o *GetDiagnosticActivationsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get diagnostic activations default response has a 4xx status code
func (o *GetDiagnosticActivationsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get diagnostic activations default response has a 5xx status code
func (o *GetDiagnosticActivationsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get diagnostic activations default response a status code equal to that given
func (o *GetDiagnosticActivationsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get diagnostic activations default response
func (o *GetDiagnosticActivationsDefault) Code() int {
	return o._statusCode
}

func (o *GetDiagnosticActivationsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] GetDiagnosticActivations default %s", o._statusCode, payload)
}

func (o *GetDiagnosticActivationsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations][%d] GetDiagnosticActivations default %s", o._statusCode, payload)
}

func (o *GetDiagnosticActivationsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDiagnosticActivationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
