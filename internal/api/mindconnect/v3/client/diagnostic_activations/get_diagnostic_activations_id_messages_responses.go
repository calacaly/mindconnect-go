// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// GetDiagnosticActivationsIDMessagesReader is a Reader for the GetDiagnosticActivationsIDMessages structure.
type GetDiagnosticActivationsIDMessagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiagnosticActivationsIDMessagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDiagnosticActivationsIDMessagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDiagnosticActivationsIDMessagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDiagnosticActivationsIDMessagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDiagnosticActivationsIDMessagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDiagnosticActivationsIDMessagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetDiagnosticActivationsIDMessagesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDiagnosticActivationsIDMessagesOK creates a GetDiagnosticActivationsIDMessagesOK with default headers values
func NewGetDiagnosticActivationsIDMessagesOK() *GetDiagnosticActivationsIDMessagesOK {
	return &GetDiagnosticActivationsIDMessagesOK{}
}

/*
GetDiagnosticActivationsIDMessagesOK describes a response with status code 200, with default header values.

OK
*/
type GetDiagnosticActivationsIDMessagesOK struct {
	Payload *models.PagedDiagnosticInformationMessages
}

// IsSuccess returns true when this get diagnostic activations Id messages o k response has a 2xx status code
func (o *GetDiagnosticActivationsIDMessagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get diagnostic activations Id messages o k response has a 3xx status code
func (o *GetDiagnosticActivationsIDMessagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id messages o k response has a 4xx status code
func (o *GetDiagnosticActivationsIDMessagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get diagnostic activations Id messages o k response has a 5xx status code
func (o *GetDiagnosticActivationsIDMessagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id messages o k response a status code equal to that given
func (o *GetDiagnosticActivationsIDMessagesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get diagnostic activations Id messages o k response
func (o *GetDiagnosticActivationsIDMessagesOK) Code() int {
	return 200
}

func (o *GetDiagnosticActivationsIDMessagesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesOK %s", 200, payload)
}

func (o *GetDiagnosticActivationsIDMessagesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesOK %s", 200, payload)
}

func (o *GetDiagnosticActivationsIDMessagesOK) GetPayload() *models.PagedDiagnosticInformationMessages {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDMessagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedDiagnosticInformationMessages)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDMessagesBadRequest creates a GetDiagnosticActivationsIDMessagesBadRequest with default headers values
func NewGetDiagnosticActivationsIDMessagesBadRequest() *GetDiagnosticActivationsIDMessagesBadRequest {
	return &GetDiagnosticActivationsIDMessagesBadRequest{}
}

/*
GetDiagnosticActivationsIDMessagesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDiagnosticActivationsIDMessagesBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this get diagnostic activations Id messages bad request response has a 2xx status code
func (o *GetDiagnosticActivationsIDMessagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id messages bad request response has a 3xx status code
func (o *GetDiagnosticActivationsIDMessagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id messages bad request response has a 4xx status code
func (o *GetDiagnosticActivationsIDMessagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id messages bad request response has a 5xx status code
func (o *GetDiagnosticActivationsIDMessagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id messages bad request response a status code equal to that given
func (o *GetDiagnosticActivationsIDMessagesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get diagnostic activations Id messages bad request response
func (o *GetDiagnosticActivationsIDMessagesBadRequest) Code() int {
	return 400
}

func (o *GetDiagnosticActivationsIDMessagesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesBadRequest %s", 400, payload)
}

func (o *GetDiagnosticActivationsIDMessagesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesBadRequest %s", 400, payload)
}

func (o *GetDiagnosticActivationsIDMessagesBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDMessagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDMessagesUnauthorized creates a GetDiagnosticActivationsIDMessagesUnauthorized with default headers values
func NewGetDiagnosticActivationsIDMessagesUnauthorized() *GetDiagnosticActivationsIDMessagesUnauthorized {
	return &GetDiagnosticActivationsIDMessagesUnauthorized{}
}

/*
GetDiagnosticActivationsIDMessagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDiagnosticActivationsIDMessagesUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get diagnostic activations Id messages unauthorized response has a 2xx status code
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id messages unauthorized response has a 3xx status code
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id messages unauthorized response has a 4xx status code
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id messages unauthorized response has a 5xx status code
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id messages unauthorized response a status code equal to that given
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get diagnostic activations Id messages unauthorized response
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) Code() int {
	return 401
}

func (o *GetDiagnosticActivationsIDMessagesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticActivationsIDMessagesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesUnauthorized %s", 401, payload)
}

func (o *GetDiagnosticActivationsIDMessagesUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDMessagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDMessagesForbidden creates a GetDiagnosticActivationsIDMessagesForbidden with default headers values
func NewGetDiagnosticActivationsIDMessagesForbidden() *GetDiagnosticActivationsIDMessagesForbidden {
	return &GetDiagnosticActivationsIDMessagesForbidden{}
}

/*
GetDiagnosticActivationsIDMessagesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDiagnosticActivationsIDMessagesForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get diagnostic activations Id messages forbidden response has a 2xx status code
func (o *GetDiagnosticActivationsIDMessagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id messages forbidden response has a 3xx status code
func (o *GetDiagnosticActivationsIDMessagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id messages forbidden response has a 4xx status code
func (o *GetDiagnosticActivationsIDMessagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id messages forbidden response has a 5xx status code
func (o *GetDiagnosticActivationsIDMessagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id messages forbidden response a status code equal to that given
func (o *GetDiagnosticActivationsIDMessagesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get diagnostic activations Id messages forbidden response
func (o *GetDiagnosticActivationsIDMessagesForbidden) Code() int {
	return 403
}

func (o *GetDiagnosticActivationsIDMessagesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesForbidden %s", 403, payload)
}

func (o *GetDiagnosticActivationsIDMessagesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesForbidden %s", 403, payload)
}

func (o *GetDiagnosticActivationsIDMessagesForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDMessagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDMessagesNotFound creates a GetDiagnosticActivationsIDMessagesNotFound with default headers values
func NewGetDiagnosticActivationsIDMessagesNotFound() *GetDiagnosticActivationsIDMessagesNotFound {
	return &GetDiagnosticActivationsIDMessagesNotFound{}
}

/*
GetDiagnosticActivationsIDMessagesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDiagnosticActivationsIDMessagesNotFound struct {
	Payload *models.Notfound
}

// IsSuccess returns true when this get diagnostic activations Id messages not found response has a 2xx status code
func (o *GetDiagnosticActivationsIDMessagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get diagnostic activations Id messages not found response has a 3xx status code
func (o *GetDiagnosticActivationsIDMessagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get diagnostic activations Id messages not found response has a 4xx status code
func (o *GetDiagnosticActivationsIDMessagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get diagnostic activations Id messages not found response has a 5xx status code
func (o *GetDiagnosticActivationsIDMessagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get diagnostic activations Id messages not found response a status code equal to that given
func (o *GetDiagnosticActivationsIDMessagesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get diagnostic activations Id messages not found response
func (o *GetDiagnosticActivationsIDMessagesNotFound) Code() int {
	return 404
}

func (o *GetDiagnosticActivationsIDMessagesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesNotFound %s", 404, payload)
}

func (o *GetDiagnosticActivationsIDMessagesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] getDiagnosticActivationsIdMessagesNotFound %s", 404, payload)
}

func (o *GetDiagnosticActivationsIDMessagesNotFound) GetPayload() *models.Notfound {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDMessagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notfound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiagnosticActivationsIDMessagesDefault creates a GetDiagnosticActivationsIDMessagesDefault with default headers values
func NewGetDiagnosticActivationsIDMessagesDefault(code int) *GetDiagnosticActivationsIDMessagesDefault {
	return &GetDiagnosticActivationsIDMessagesDefault{
		_statusCode: code,
	}
}

/*
GetDiagnosticActivationsIDMessagesDefault describes a response with status code -1, with default header values.

unexpected error
*/
type GetDiagnosticActivationsIDMessagesDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get diagnostic activations ID messages default response has a 2xx status code
func (o *GetDiagnosticActivationsIDMessagesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get diagnostic activations ID messages default response has a 3xx status code
func (o *GetDiagnosticActivationsIDMessagesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get diagnostic activations ID messages default response has a 4xx status code
func (o *GetDiagnosticActivationsIDMessagesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get diagnostic activations ID messages default response has a 5xx status code
func (o *GetDiagnosticActivationsIDMessagesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get diagnostic activations ID messages default response a status code equal to that given
func (o *GetDiagnosticActivationsIDMessagesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get diagnostic activations ID messages default response
func (o *GetDiagnosticActivationsIDMessagesDefault) Code() int {
	return o._statusCode
}

func (o *GetDiagnosticActivationsIDMessagesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] GetDiagnosticActivationsIDMessages default %s", o._statusCode, payload)
}

func (o *GetDiagnosticActivationsIDMessagesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /diagnosticActivations/{id}/messages][%d] GetDiagnosticActivationsIDMessages default %s", o._statusCode, payload)
}

func (o *GetDiagnosticActivationsIDMessagesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDiagnosticActivationsIDMessagesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
