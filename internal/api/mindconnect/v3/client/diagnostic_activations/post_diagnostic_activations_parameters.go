// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// NewPostDiagnosticActivationsParams creates a new PostDiagnosticActivationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostDiagnosticActivationsParams() *PostDiagnosticActivationsParams {
	return &PostDiagnosticActivationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostDiagnosticActivationsParamsWithTimeout creates a new PostDiagnosticActivationsParams object
// with the ability to set a timeout on a request.
func NewPostDiagnosticActivationsParamsWithTimeout(timeout time.Duration) *PostDiagnosticActivationsParams {
	return &PostDiagnosticActivationsParams{
		timeout: timeout,
	}
}

// NewPostDiagnosticActivationsParamsWithContext creates a new PostDiagnosticActivationsParams object
// with the ability to set a context for a request.
func NewPostDiagnosticActivationsParamsWithContext(ctx context.Context) *PostDiagnosticActivationsParams {
	return &PostDiagnosticActivationsParams{
		Context: ctx,
	}
}

// NewPostDiagnosticActivationsParamsWithHTTPClient creates a new PostDiagnosticActivationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostDiagnosticActivationsParamsWithHTTPClient(client *http.Client) *PostDiagnosticActivationsParams {
	return &PostDiagnosticActivationsParams{
		HTTPClient: client,
	}
}

/*
PostDiagnosticActivationsParams contains all the parameters to send to the API endpoint

	for the post diagnostic activations operation.

	Typically these are written to a http.Request.
*/
type PostDiagnosticActivationsParams struct {

	/* DiagnosticActivation.

	   Object describing new diagnostic activation resource.
	*/
	DiagnosticActivation *models.DiagnosticActivation

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post diagnostic activations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostDiagnosticActivationsParams) WithDefaults() *PostDiagnosticActivationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post diagnostic activations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostDiagnosticActivationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) WithTimeout(timeout time.Duration) *PostDiagnosticActivationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) WithContext(ctx context.Context) *PostDiagnosticActivationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) WithHTTPClient(client *http.Client) *PostDiagnosticActivationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDiagnosticActivation adds the diagnosticActivation to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) WithDiagnosticActivation(diagnosticActivation *models.DiagnosticActivation) *PostDiagnosticActivationsParams {
	o.SetDiagnosticActivation(diagnosticActivation)
	return o
}

// SetDiagnosticActivation adds the diagnosticActivation to the post diagnostic activations params
func (o *PostDiagnosticActivationsParams) SetDiagnosticActivation(diagnosticActivation *models.DiagnosticActivation) {
	o.DiagnosticActivation = diagnosticActivation
}

// WriteToRequest writes these params to a swagger request
func (o *PostDiagnosticActivationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.DiagnosticActivation != nil {
		if err := r.SetBodyParam(o.DiagnosticActivation); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
