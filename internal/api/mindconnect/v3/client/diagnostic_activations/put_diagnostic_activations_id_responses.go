// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/mindconnect/v3/models"
)

// PutDiagnosticActivationsIDReader is a Reader for the PutDiagnosticActivationsID structure.
type PutDiagnosticActivationsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDiagnosticActivationsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDiagnosticActivationsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDiagnosticActivationsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDiagnosticActivationsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDiagnosticActivationsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDiagnosticActivationsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutDiagnosticActivationsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutDiagnosticActivationsIDOK creates a PutDiagnosticActivationsIDOK with default headers values
func NewPutDiagnosticActivationsIDOK() *PutDiagnosticActivationsIDOK {
	return &PutDiagnosticActivationsIDOK{}
}

/*
PutDiagnosticActivationsIDOK describes a response with status code 200, with default header values.

OK
*/
type PutDiagnosticActivationsIDOK struct {
	Payload *models.DiagnosticActivation
}

// IsSuccess returns true when this put diagnostic activations Id o k response has a 2xx status code
func (o *PutDiagnosticActivationsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put diagnostic activations Id o k response has a 3xx status code
func (o *PutDiagnosticActivationsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put diagnostic activations Id o k response has a 4xx status code
func (o *PutDiagnosticActivationsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put diagnostic activations Id o k response has a 5xx status code
func (o *PutDiagnosticActivationsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put diagnostic activations Id o k response a status code equal to that given
func (o *PutDiagnosticActivationsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put diagnostic activations Id o k response
func (o *PutDiagnosticActivationsIDOK) Code() int {
	return 200
}

func (o *PutDiagnosticActivationsIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdOK %s", 200, payload)
}

func (o *PutDiagnosticActivationsIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdOK %s", 200, payload)
}

func (o *PutDiagnosticActivationsIDOK) GetPayload() *models.DiagnosticActivation {
	return o.Payload
}

func (o *PutDiagnosticActivationsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DiagnosticActivation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDiagnosticActivationsIDBadRequest creates a PutDiagnosticActivationsIDBadRequest with default headers values
func NewPutDiagnosticActivationsIDBadRequest() *PutDiagnosticActivationsIDBadRequest {
	return &PutDiagnosticActivationsIDBadRequest{}
}

/*
PutDiagnosticActivationsIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutDiagnosticActivationsIDBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this put diagnostic activations Id bad request response has a 2xx status code
func (o *PutDiagnosticActivationsIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put diagnostic activations Id bad request response has a 3xx status code
func (o *PutDiagnosticActivationsIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put diagnostic activations Id bad request response has a 4xx status code
func (o *PutDiagnosticActivationsIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put diagnostic activations Id bad request response has a 5xx status code
func (o *PutDiagnosticActivationsIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put diagnostic activations Id bad request response a status code equal to that given
func (o *PutDiagnosticActivationsIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put diagnostic activations Id bad request response
func (o *PutDiagnosticActivationsIDBadRequest) Code() int {
	return 400
}

func (o *PutDiagnosticActivationsIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdBadRequest %s", 400, payload)
}

func (o *PutDiagnosticActivationsIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdBadRequest %s", 400, payload)
}

func (o *PutDiagnosticActivationsIDBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *PutDiagnosticActivationsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDiagnosticActivationsIDUnauthorized creates a PutDiagnosticActivationsIDUnauthorized with default headers values
func NewPutDiagnosticActivationsIDUnauthorized() *PutDiagnosticActivationsIDUnauthorized {
	return &PutDiagnosticActivationsIDUnauthorized{}
}

/*
PutDiagnosticActivationsIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutDiagnosticActivationsIDUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this put diagnostic activations Id unauthorized response has a 2xx status code
func (o *PutDiagnosticActivationsIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put diagnostic activations Id unauthorized response has a 3xx status code
func (o *PutDiagnosticActivationsIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put diagnostic activations Id unauthorized response has a 4xx status code
func (o *PutDiagnosticActivationsIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put diagnostic activations Id unauthorized response has a 5xx status code
func (o *PutDiagnosticActivationsIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put diagnostic activations Id unauthorized response a status code equal to that given
func (o *PutDiagnosticActivationsIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put diagnostic activations Id unauthorized response
func (o *PutDiagnosticActivationsIDUnauthorized) Code() int {
	return 401
}

func (o *PutDiagnosticActivationsIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdUnauthorized %s", 401, payload)
}

func (o *PutDiagnosticActivationsIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdUnauthorized %s", 401, payload)
}

func (o *PutDiagnosticActivationsIDUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *PutDiagnosticActivationsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDiagnosticActivationsIDForbidden creates a PutDiagnosticActivationsIDForbidden with default headers values
func NewPutDiagnosticActivationsIDForbidden() *PutDiagnosticActivationsIDForbidden {
	return &PutDiagnosticActivationsIDForbidden{}
}

/*
PutDiagnosticActivationsIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutDiagnosticActivationsIDForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this put diagnostic activations Id forbidden response has a 2xx status code
func (o *PutDiagnosticActivationsIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put diagnostic activations Id forbidden response has a 3xx status code
func (o *PutDiagnosticActivationsIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put diagnostic activations Id forbidden response has a 4xx status code
func (o *PutDiagnosticActivationsIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put diagnostic activations Id forbidden response has a 5xx status code
func (o *PutDiagnosticActivationsIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put diagnostic activations Id forbidden response a status code equal to that given
func (o *PutDiagnosticActivationsIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put diagnostic activations Id forbidden response
func (o *PutDiagnosticActivationsIDForbidden) Code() int {
	return 403
}

func (o *PutDiagnosticActivationsIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdForbidden %s", 403, payload)
}

func (o *PutDiagnosticActivationsIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdForbidden %s", 403, payload)
}

func (o *PutDiagnosticActivationsIDForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *PutDiagnosticActivationsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDiagnosticActivationsIDNotFound creates a PutDiagnosticActivationsIDNotFound with default headers values
func NewPutDiagnosticActivationsIDNotFound() *PutDiagnosticActivationsIDNotFound {
	return &PutDiagnosticActivationsIDNotFound{}
}

/*
PutDiagnosticActivationsIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutDiagnosticActivationsIDNotFound struct {
	Payload *models.Notfound
}

// IsSuccess returns true when this put diagnostic activations Id not found response has a 2xx status code
func (o *PutDiagnosticActivationsIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put diagnostic activations Id not found response has a 3xx status code
func (o *PutDiagnosticActivationsIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put diagnostic activations Id not found response has a 4xx status code
func (o *PutDiagnosticActivationsIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put diagnostic activations Id not found response has a 5xx status code
func (o *PutDiagnosticActivationsIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put diagnostic activations Id not found response a status code equal to that given
func (o *PutDiagnosticActivationsIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put diagnostic activations Id not found response
func (o *PutDiagnosticActivationsIDNotFound) Code() int {
	return 404
}

func (o *PutDiagnosticActivationsIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdNotFound %s", 404, payload)
}

func (o *PutDiagnosticActivationsIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] putDiagnosticActivationsIdNotFound %s", 404, payload)
}

func (o *PutDiagnosticActivationsIDNotFound) GetPayload() *models.Notfound {
	return o.Payload
}

func (o *PutDiagnosticActivationsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notfound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDiagnosticActivationsIDDefault creates a PutDiagnosticActivationsIDDefault with default headers values
func NewPutDiagnosticActivationsIDDefault(code int) *PutDiagnosticActivationsIDDefault {
	return &PutDiagnosticActivationsIDDefault{
		_statusCode: code,
	}
}

/*
PutDiagnosticActivationsIDDefault describes a response with status code -1, with default header values.

unexpected error
*/
type PutDiagnosticActivationsIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this put diagnostic activations ID default response has a 2xx status code
func (o *PutDiagnosticActivationsIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put diagnostic activations ID default response has a 3xx status code
func (o *PutDiagnosticActivationsIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put diagnostic activations ID default response has a 4xx status code
func (o *PutDiagnosticActivationsIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put diagnostic activations ID default response has a 5xx status code
func (o *PutDiagnosticActivationsIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put diagnostic activations ID default response a status code equal to that given
func (o *PutDiagnosticActivationsIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the put diagnostic activations ID default response
func (o *PutDiagnosticActivationsIDDefault) Code() int {
	return o._statusCode
}

func (o *PutDiagnosticActivationsIDDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] PutDiagnosticActivationsID default %s", o._statusCode, payload)
}

func (o *PutDiagnosticActivationsIDDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /diagnosticActivations/{id}][%d] PutDiagnosticActivationsID default %s", o._statusCode, payload)
}

func (o *PutDiagnosticActivationsIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDiagnosticActivationsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
