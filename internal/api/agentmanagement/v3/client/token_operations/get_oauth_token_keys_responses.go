// Code generated by go-swagger; DO NOT EDIT.

package token_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/agentmanagement/v3/models"
)

// GetOauthTokenKeysReader is a Reader for the GetOauthTokenKeys structure.
type GetOauthTokenKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOauthTokenKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOauthTokenKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetOauthTokenKeysTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOauthTokenKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetOauthTokenKeysDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetOauthTokenKeysOK creates a GetOauthTokenKeysOK with default headers values
func NewGetOauthTokenKeysOK() *GetOauthTokenKeysOK {
	return &GetOauthTokenKeysOK{}
}

/*
GetOauthTokenKeysOK describes a response with status code 200, with default header values.

OK
*/
type GetOauthTokenKeysOK struct {
	Payload *models.TokenKeys
}

// IsSuccess returns true when this get oauth token keys o k response has a 2xx status code
func (o *GetOauthTokenKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get oauth token keys o k response has a 3xx status code
func (o *GetOauthTokenKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth token keys o k response has a 4xx status code
func (o *GetOauthTokenKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get oauth token keys o k response has a 5xx status code
func (o *GetOauthTokenKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth token keys o k response a status code equal to that given
func (o *GetOauthTokenKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get oauth token keys o k response
func (o *GetOauthTokenKeysOK) Code() int {
	return 200
}

func (o *GetOauthTokenKeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /oauth/token_keys][%d] getOauthTokenKeysOK %s", 200, payload)
}

func (o *GetOauthTokenKeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /oauth/token_keys][%d] getOauthTokenKeysOK %s", 200, payload)
}

func (o *GetOauthTokenKeysOK) GetPayload() *models.TokenKeys {
	return o.Payload
}

func (o *GetOauthTokenKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TokenKeys)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthTokenKeysTooManyRequests creates a GetOauthTokenKeysTooManyRequests with default headers values
func NewGetOauthTokenKeysTooManyRequests() *GetOauthTokenKeysTooManyRequests {
	return &GetOauthTokenKeysTooManyRequests{}
}

/*
GetOauthTokenKeysTooManyRequests describes a response with status code 429, with default header values.

API rate limit exceeded.
*/
type GetOauthTokenKeysTooManyRequests struct {
	Payload *models.APIRateLimitExceeded
}

// IsSuccess returns true when this get oauth token keys too many requests response has a 2xx status code
func (o *GetOauthTokenKeysTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth token keys too many requests response has a 3xx status code
func (o *GetOauthTokenKeysTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth token keys too many requests response has a 4xx status code
func (o *GetOauthTokenKeysTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth token keys too many requests response has a 5xx status code
func (o *GetOauthTokenKeysTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth token keys too many requests response a status code equal to that given
func (o *GetOauthTokenKeysTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get oauth token keys too many requests response
func (o *GetOauthTokenKeysTooManyRequests) Code() int {
	return 429
}

func (o *GetOauthTokenKeysTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /oauth/token_keys][%d] getOauthTokenKeysTooManyRequests %s", 429, payload)
}

func (o *GetOauthTokenKeysTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /oauth/token_keys][%d] getOauthTokenKeysTooManyRequests %s", 429, payload)
}

func (o *GetOauthTokenKeysTooManyRequests) GetPayload() *models.APIRateLimitExceeded {
	return o.Payload
}

func (o *GetOauthTokenKeysTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIRateLimitExceeded)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthTokenKeysInternalServerError creates a GetOauthTokenKeysInternalServerError with default headers values
func NewGetOauthTokenKeysInternalServerError() *GetOauthTokenKeysInternalServerError {
	return &GetOauthTokenKeysInternalServerError{}
}

/*
GetOauthTokenKeysInternalServerError describes a response with status code 500, with default header values.

unexpected error
*/
type GetOauthTokenKeysInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get oauth token keys internal server error response has a 2xx status code
func (o *GetOauthTokenKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth token keys internal server error response has a 3xx status code
func (o *GetOauthTokenKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth token keys internal server error response has a 4xx status code
func (o *GetOauthTokenKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get oauth token keys internal server error response has a 5xx status code
func (o *GetOauthTokenKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get oauth token keys internal server error response a status code equal to that given
func (o *GetOauthTokenKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get oauth token keys internal server error response
func (o *GetOauthTokenKeysInternalServerError) Code() int {
	return 500
}

func (o *GetOauthTokenKeysInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /oauth/token_keys][%d] getOauthTokenKeysInternalServerError %s", 500, payload)
}

func (o *GetOauthTokenKeysInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /oauth/token_keys][%d] getOauthTokenKeysInternalServerError %s", 500, payload)
}

func (o *GetOauthTokenKeysInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOauthTokenKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthTokenKeysDefault creates a GetOauthTokenKeysDefault with default headers values
func NewGetOauthTokenKeysDefault(code int) *GetOauthTokenKeysDefault {
	return &GetOauthTokenKeysDefault{
		_statusCode: code,
	}
}

/*
GetOauthTokenKeysDefault describes a response with status code -1, with default header values.

Other error with any status code and response body format.
*/
type GetOauthTokenKeysDefault struct {
	_statusCode int
}

// IsSuccess returns true when this get oauth token keys default response has a 2xx status code
func (o *GetOauthTokenKeysDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get oauth token keys default response has a 3xx status code
func (o *GetOauthTokenKeysDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get oauth token keys default response has a 4xx status code
func (o *GetOauthTokenKeysDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get oauth token keys default response has a 5xx status code
func (o *GetOauthTokenKeysDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get oauth token keys default response a status code equal to that given
func (o *GetOauthTokenKeysDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get oauth token keys default response
func (o *GetOauthTokenKeysDefault) Code() int {
	return o._statusCode
}

func (o *GetOauthTokenKeysDefault) Error() string {
	return fmt.Sprintf("[GET /oauth/token_keys][%d] GetOauthTokenKeys default", o._statusCode)
}

func (o *GetOauthTokenKeysDefault) String() string {
	return fmt.Sprintf("[GET /oauth/token_keys][%d] GetOauthTokenKeys default", o._statusCode)
}

func (o *GetOauthTokenKeysDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
