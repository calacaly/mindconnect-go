// Code generated by go-swagger; DO NOT EDIT.

package agent_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/agentmanagement/v3/models"
)

// PutAgentsIDReader is a Reader for the PutAgentsID structure.
type PutAgentsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAgentsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAgentsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutAgentsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutAgentsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutAgentsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutAgentsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutAgentsIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewPutAgentsIDPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutAgentsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutAgentsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutAgentsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutAgentsIDOK creates a PutAgentsIDOK with default headers values
func NewPutAgentsIDOK() *PutAgentsIDOK {
	return &PutAgentsIDOK{}
}

/*
PutAgentsIDOK describes a response with status code 200, with default header values.

OK
*/
type PutAgentsIDOK struct {
	Payload *models.Agent
}

// IsSuccess returns true when this put agents Id o k response has a 2xx status code
func (o *PutAgentsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put agents Id o k response has a 3xx status code
func (o *PutAgentsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id o k response has a 4xx status code
func (o *PutAgentsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put agents Id o k response has a 5xx status code
func (o *PutAgentsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id o k response a status code equal to that given
func (o *PutAgentsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put agents Id o k response
func (o *PutAgentsIDOK) Code() int {
	return 200
}

func (o *PutAgentsIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdOK %s", 200, payload)
}

func (o *PutAgentsIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdOK %s", 200, payload)
}

func (o *PutAgentsIDOK) GetPayload() *models.Agent {
	return o.Payload
}

func (o *PutAgentsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Agent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDBadRequest creates a PutAgentsIDBadRequest with default headers values
func NewPutAgentsIDBadRequest() *PutAgentsIDBadRequest {
	return &PutAgentsIDBadRequest{}
}

/*
PutAgentsIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutAgentsIDBadRequest struct {
	Payload *models.Badrequest
}

// IsSuccess returns true when this put agents Id bad request response has a 2xx status code
func (o *PutAgentsIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id bad request response has a 3xx status code
func (o *PutAgentsIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id bad request response has a 4xx status code
func (o *PutAgentsIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put agents Id bad request response has a 5xx status code
func (o *PutAgentsIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id bad request response a status code equal to that given
func (o *PutAgentsIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put agents Id bad request response
func (o *PutAgentsIDBadRequest) Code() int {
	return 400
}

func (o *PutAgentsIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdBadRequest %s", 400, payload)
}

func (o *PutAgentsIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdBadRequest %s", 400, payload)
}

func (o *PutAgentsIDBadRequest) GetPayload() *models.Badrequest {
	return o.Payload
}

func (o *PutAgentsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Badrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDUnauthorized creates a PutAgentsIDUnauthorized with default headers values
func NewPutAgentsIDUnauthorized() *PutAgentsIDUnauthorized {
	return &PutAgentsIDUnauthorized{}
}

/*
PutAgentsIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutAgentsIDUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this put agents Id unauthorized response has a 2xx status code
func (o *PutAgentsIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id unauthorized response has a 3xx status code
func (o *PutAgentsIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id unauthorized response has a 4xx status code
func (o *PutAgentsIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put agents Id unauthorized response has a 5xx status code
func (o *PutAgentsIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id unauthorized response a status code equal to that given
func (o *PutAgentsIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put agents Id unauthorized response
func (o *PutAgentsIDUnauthorized) Code() int {
	return 401
}

func (o *PutAgentsIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdUnauthorized %s", 401, payload)
}

func (o *PutAgentsIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdUnauthorized %s", 401, payload)
}

func (o *PutAgentsIDUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *PutAgentsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDForbidden creates a PutAgentsIDForbidden with default headers values
func NewPutAgentsIDForbidden() *PutAgentsIDForbidden {
	return &PutAgentsIDForbidden{}
}

/*
PutAgentsIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutAgentsIDForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this put agents Id forbidden response has a 2xx status code
func (o *PutAgentsIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id forbidden response has a 3xx status code
func (o *PutAgentsIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id forbidden response has a 4xx status code
func (o *PutAgentsIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put agents Id forbidden response has a 5xx status code
func (o *PutAgentsIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id forbidden response a status code equal to that given
func (o *PutAgentsIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put agents Id forbidden response
func (o *PutAgentsIDForbidden) Code() int {
	return 403
}

func (o *PutAgentsIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdForbidden %s", 403, payload)
}

func (o *PutAgentsIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdForbidden %s", 403, payload)
}

func (o *PutAgentsIDForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *PutAgentsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDNotFound creates a PutAgentsIDNotFound with default headers values
func NewPutAgentsIDNotFound() *PutAgentsIDNotFound {
	return &PutAgentsIDNotFound{}
}

/*
PutAgentsIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutAgentsIDNotFound struct {
	Payload *models.Notfound
}

// IsSuccess returns true when this put agents Id not found response has a 2xx status code
func (o *PutAgentsIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id not found response has a 3xx status code
func (o *PutAgentsIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id not found response has a 4xx status code
func (o *PutAgentsIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put agents Id not found response has a 5xx status code
func (o *PutAgentsIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id not found response a status code equal to that given
func (o *PutAgentsIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put agents Id not found response
func (o *PutAgentsIDNotFound) Code() int {
	return 404
}

func (o *PutAgentsIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdNotFound %s", 404, payload)
}

func (o *PutAgentsIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdNotFound %s", 404, payload)
}

func (o *PutAgentsIDNotFound) GetPayload() *models.Notfound {
	return o.Payload
}

func (o *PutAgentsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notfound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDConflict creates a PutAgentsIDConflict with default headers values
func NewPutAgentsIDConflict() *PutAgentsIDConflict {
	return &PutAgentsIDConflict{}
}

/*
PutAgentsIDConflict describes a response with status code 409, with default header values.

Resource is already available.
*/
type PutAgentsIDConflict struct {
	Payload *models.Conflict
}

// IsSuccess returns true when this put agents Id conflict response has a 2xx status code
func (o *PutAgentsIDConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id conflict response has a 3xx status code
func (o *PutAgentsIDConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id conflict response has a 4xx status code
func (o *PutAgentsIDConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put agents Id conflict response has a 5xx status code
func (o *PutAgentsIDConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id conflict response a status code equal to that given
func (o *PutAgentsIDConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the put agents Id conflict response
func (o *PutAgentsIDConflict) Code() int {
	return 409
}

func (o *PutAgentsIDConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdConflict %s", 409, payload)
}

func (o *PutAgentsIDConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdConflict %s", 409, payload)
}

func (o *PutAgentsIDConflict) GetPayload() *models.Conflict {
	return o.Payload
}

func (o *PutAgentsIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Conflict)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDPreconditionFailed creates a PutAgentsIDPreconditionFailed with default headers values
func NewPutAgentsIDPreconditionFailed() *PutAgentsIDPreconditionFailed {
	return &PutAgentsIDPreconditionFailed{}
}

/*
PutAgentsIDPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type PutAgentsIDPreconditionFailed struct {
	Payload *models.Preconditionfailed
}

// IsSuccess returns true when this put agents Id precondition failed response has a 2xx status code
func (o *PutAgentsIDPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id precondition failed response has a 3xx status code
func (o *PutAgentsIDPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id precondition failed response has a 4xx status code
func (o *PutAgentsIDPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this put agents Id precondition failed response has a 5xx status code
func (o *PutAgentsIDPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id precondition failed response a status code equal to that given
func (o *PutAgentsIDPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the put agents Id precondition failed response
func (o *PutAgentsIDPreconditionFailed) Code() int {
	return 412
}

func (o *PutAgentsIDPreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdPreconditionFailed %s", 412, payload)
}

func (o *PutAgentsIDPreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdPreconditionFailed %s", 412, payload)
}

func (o *PutAgentsIDPreconditionFailed) GetPayload() *models.Preconditionfailed {
	return o.Payload
}

func (o *PutAgentsIDPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Preconditionfailed)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDTooManyRequests creates a PutAgentsIDTooManyRequests with default headers values
func NewPutAgentsIDTooManyRequests() *PutAgentsIDTooManyRequests {
	return &PutAgentsIDTooManyRequests{}
}

/*
PutAgentsIDTooManyRequests describes a response with status code 429, with default header values.

API rate limit exceeded.
*/
type PutAgentsIDTooManyRequests struct {
	Payload *models.APIRateLimitExceeded
}

// IsSuccess returns true when this put agents Id too many requests response has a 2xx status code
func (o *PutAgentsIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id too many requests response has a 3xx status code
func (o *PutAgentsIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id too many requests response has a 4xx status code
func (o *PutAgentsIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put agents Id too many requests response has a 5xx status code
func (o *PutAgentsIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put agents Id too many requests response a status code equal to that given
func (o *PutAgentsIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the put agents Id too many requests response
func (o *PutAgentsIDTooManyRequests) Code() int {
	return 429
}

func (o *PutAgentsIDTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdTooManyRequests %s", 429, payload)
}

func (o *PutAgentsIDTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdTooManyRequests %s", 429, payload)
}

func (o *PutAgentsIDTooManyRequests) GetPayload() *models.APIRateLimitExceeded {
	return o.Payload
}

func (o *PutAgentsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIRateLimitExceeded)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDInternalServerError creates a PutAgentsIDInternalServerError with default headers values
func NewPutAgentsIDInternalServerError() *PutAgentsIDInternalServerError {
	return &PutAgentsIDInternalServerError{}
}

/*
PutAgentsIDInternalServerError describes a response with status code 500, with default header values.

unexpected error
*/
type PutAgentsIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this put agents Id internal server error response has a 2xx status code
func (o *PutAgentsIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put agents Id internal server error response has a 3xx status code
func (o *PutAgentsIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put agents Id internal server error response has a 4xx status code
func (o *PutAgentsIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put agents Id internal server error response has a 5xx status code
func (o *PutAgentsIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put agents Id internal server error response a status code equal to that given
func (o *PutAgentsIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the put agents Id internal server error response
func (o *PutAgentsIDInternalServerError) Code() int {
	return 500
}

func (o *PutAgentsIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdInternalServerError %s", 500, payload)
}

func (o *PutAgentsIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /agents/{id}][%d] putAgentsIdInternalServerError %s", 500, payload)
}

func (o *PutAgentsIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutAgentsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAgentsIDDefault creates a PutAgentsIDDefault with default headers values
func NewPutAgentsIDDefault(code int) *PutAgentsIDDefault {
	return &PutAgentsIDDefault{
		_statusCode: code,
	}
}

/*
PutAgentsIDDefault describes a response with status code -1, with default header values.

Other error with any status code and response body format.
*/
type PutAgentsIDDefault struct {
	_statusCode int
}

// IsSuccess returns true when this put agents ID default response has a 2xx status code
func (o *PutAgentsIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put agents ID default response has a 3xx status code
func (o *PutAgentsIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put agents ID default response has a 4xx status code
func (o *PutAgentsIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put agents ID default response has a 5xx status code
func (o *PutAgentsIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put agents ID default response a status code equal to that given
func (o *PutAgentsIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the put agents ID default response
func (o *PutAgentsIDDefault) Code() int {
	return o._statusCode
}

func (o *PutAgentsIDDefault) Error() string {
	return fmt.Sprintf("[PUT /agents/{id}][%d] PutAgentsID default", o._statusCode)
}

func (o *PutAgentsIDDefault) String() string {
	return fmt.Sprintf("[PUT /agents/{id}][%d] PutAgentsID default", o._statusCode)
}

func (o *PutAgentsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
