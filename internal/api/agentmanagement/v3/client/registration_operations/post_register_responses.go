// Code generated by go-swagger; DO NOT EDIT.

package registration_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/calacaly/mindconnect-go/internal/api/agentmanagement/v3/models"
)

// PostRegisterReader is a Reader for the PostRegister structure.
type PostRegisterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRegisterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRegisterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRegisterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRegisterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRegisterTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRegisterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostRegisterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostRegisterCreated creates a PostRegisterCreated with default headers values
func NewPostRegisterCreated() *PostRegisterCreated {
	return &PostRegisterCreated{}
}

/*
PostRegisterCreated describes a response with status code 201, with default header values.

Created
*/
type PostRegisterCreated struct {
	Payload *models.ClientIdentifier
}

// IsSuccess returns true when this post register created response has a 2xx status code
func (o *PostRegisterCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post register created response has a 3xx status code
func (o *PostRegisterCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post register created response has a 4xx status code
func (o *PostRegisterCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post register created response has a 5xx status code
func (o *PostRegisterCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post register created response a status code equal to that given
func (o *PostRegisterCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post register created response
func (o *PostRegisterCreated) Code() int {
	return 201
}

func (o *PostRegisterCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterCreated %s", 201, payload)
}

func (o *PostRegisterCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterCreated %s", 201, payload)
}

func (o *PostRegisterCreated) GetPayload() *models.ClientIdentifier {
	return o.Payload
}

func (o *PostRegisterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientIdentifier)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRegisterBadRequest creates a PostRegisterBadRequest with default headers values
func NewPostRegisterBadRequest() *PostRegisterBadRequest {
	return &PostRegisterBadRequest{}
}

/*
PostRegisterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostRegisterBadRequest struct {
	Payload *models.BadrequestIAM
}

// IsSuccess returns true when this post register bad request response has a 2xx status code
func (o *PostRegisterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post register bad request response has a 3xx status code
func (o *PostRegisterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post register bad request response has a 4xx status code
func (o *PostRegisterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post register bad request response has a 5xx status code
func (o *PostRegisterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post register bad request response a status code equal to that given
func (o *PostRegisterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post register bad request response
func (o *PostRegisterBadRequest) Code() int {
	return 400
}

func (o *PostRegisterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterBadRequest %s", 400, payload)
}

func (o *PostRegisterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterBadRequest %s", 400, payload)
}

func (o *PostRegisterBadRequest) GetPayload() *models.BadrequestIAM {
	return o.Payload
}

func (o *PostRegisterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadrequestIAM)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRegisterUnauthorized creates a PostRegisterUnauthorized with default headers values
func NewPostRegisterUnauthorized() *PostRegisterUnauthorized {
	return &PostRegisterUnauthorized{}
}

/*
PostRegisterUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostRegisterUnauthorized struct {
	Payload *models.UnauthorizedIAM
}

// IsSuccess returns true when this post register unauthorized response has a 2xx status code
func (o *PostRegisterUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post register unauthorized response has a 3xx status code
func (o *PostRegisterUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post register unauthorized response has a 4xx status code
func (o *PostRegisterUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post register unauthorized response has a 5xx status code
func (o *PostRegisterUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post register unauthorized response a status code equal to that given
func (o *PostRegisterUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post register unauthorized response
func (o *PostRegisterUnauthorized) Code() int {
	return 401
}

func (o *PostRegisterUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterUnauthorized %s", 401, payload)
}

func (o *PostRegisterUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterUnauthorized %s", 401, payload)
}

func (o *PostRegisterUnauthorized) GetPayload() *models.UnauthorizedIAM {
	return o.Payload
}

func (o *PostRegisterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedIAM)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRegisterTooManyRequests creates a PostRegisterTooManyRequests with default headers values
func NewPostRegisterTooManyRequests() *PostRegisterTooManyRequests {
	return &PostRegisterTooManyRequests{}
}

/*
PostRegisterTooManyRequests describes a response with status code 429, with default header values.

TooManyRequests
*/
type PostRegisterTooManyRequests struct {
	Payload *models.TooManyRequests
}

// IsSuccess returns true when this post register too many requests response has a 2xx status code
func (o *PostRegisterTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post register too many requests response has a 3xx status code
func (o *PostRegisterTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post register too many requests response has a 4xx status code
func (o *PostRegisterTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post register too many requests response has a 5xx status code
func (o *PostRegisterTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post register too many requests response a status code equal to that given
func (o *PostRegisterTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the post register too many requests response
func (o *PostRegisterTooManyRequests) Code() int {
	return 429
}

func (o *PostRegisterTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterTooManyRequests %s", 429, payload)
}

func (o *PostRegisterTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterTooManyRequests %s", 429, payload)
}

func (o *PostRegisterTooManyRequests) GetPayload() *models.TooManyRequests {
	return o.Payload
}

func (o *PostRegisterTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequests)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRegisterInternalServerError creates a PostRegisterInternalServerError with default headers values
func NewPostRegisterInternalServerError() *PostRegisterInternalServerError {
	return &PostRegisterInternalServerError{}
}

/*
PostRegisterInternalServerError describes a response with status code 500, with default header values.

unexpected error
*/
type PostRegisterInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this post register internal server error response has a 2xx status code
func (o *PostRegisterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post register internal server error response has a 3xx status code
func (o *PostRegisterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post register internal server error response has a 4xx status code
func (o *PostRegisterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post register internal server error response has a 5xx status code
func (o *PostRegisterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post register internal server error response a status code equal to that given
func (o *PostRegisterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post register internal server error response
func (o *PostRegisterInternalServerError) Code() int {
	return 500
}

func (o *PostRegisterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterInternalServerError %s", 500, payload)
}

func (o *PostRegisterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /register][%d] postRegisterInternalServerError %s", 500, payload)
}

func (o *PostRegisterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostRegisterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRegisterDefault creates a PostRegisterDefault with default headers values
func NewPostRegisterDefault(code int) *PostRegisterDefault {
	return &PostRegisterDefault{
		_statusCode: code,
	}
}

/*
PostRegisterDefault describes a response with status code -1, with default header values.

Other error with any status code and response body format.
*/
type PostRegisterDefault struct {
	_statusCode int
}

// IsSuccess returns true when this post register default response has a 2xx status code
func (o *PostRegisterDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post register default response has a 3xx status code
func (o *PostRegisterDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post register default response has a 4xx status code
func (o *PostRegisterDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post register default response has a 5xx status code
func (o *PostRegisterDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post register default response a status code equal to that given
func (o *PostRegisterDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post register default response
func (o *PostRegisterDefault) Code() int {
	return o._statusCode
}

func (o *PostRegisterDefault) Error() string {
	return fmt.Sprintf("[POST /register][%d] PostRegister default", o._statusCode)
}

func (o *PostRegisterDefault) String() string {
	return fmt.Sprintf("[POST /register][%d] PostRegister default", o._statusCode)
}

func (o *PostRegisterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
